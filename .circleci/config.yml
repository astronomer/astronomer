# Warning: automatically generated file
# Please edit config.yml.j2, and use the script generate_circleci_config.py
version: 2.1
executors:
  docker-executor:
    environment:
      GIT_ORG: astronomer
    docker:
      - image: circleci/python:3
jobs:
  lint:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: Install ci tools
          command: ./bin/install-ci-tools 1
      - run:
          name: Lint the Astronomer chart
          command: export PATH=/tmp/bin:$PATH make lint

  build-lts-upgrade:
    executor: docker-executor
    steps:
      - docker-build:
          image_name: lts-016-023-upgrade
          path: './bin/migration-scripts/lts-to-lts/0.16-to-0.23/playbooks/'

  unittest-charts:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: unittest the Astronomer chart
          command: make unittest-charts

  build-artifact:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: Package the Astronomer chart
          command: |
            source ./bin/install-ci-tools 1
            make build
      - persist_to_workspace:
          root: '.'
          paths:
            - './*.tgz'

  release-to-internal:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release the Astronomer chart to internal
          command: |
            set -e
            sudo apt-get update && sudo apt-get install -y ca-certificates curl
            pyenv global 3.8.5
            bin/release-helm-chart /tmp/workspace/astronomer-*.tgz

  release-to-public:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release the Astronomer chart to prod
          command: |
            set -e
            sudo apt-get update && sudo apt-get install -y ca-certificates curl
            pyenv global 3.8.5
            bin/release-helm-chart -p /tmp/workspace/astronomer-*.tgz
      - publish-github-release

  platform-1-16-15:
    machine:
      image: ubuntu-2004:202008-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v1.16.15
    steps:
      - helm-install:
          astronomer-tags: "platform postgresql monitoring logging kubed keda"

  platform-1-17-11:
    machine:
      image: ubuntu-2004:202008-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v1.17.11
    steps:
      - helm-install:
          astronomer-tags: "platform postgresql monitoring logging kubed keda"

  platform-1-18-8:
    machine:
      image: ubuntu-2004:202008-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v1.18.8
    steps:
      - helm-install:
          astronomer-tags: "platform postgresql monitoring logging kubed keda"




  lts-upgrade-0-23-test:
    machine:
      image: ubuntu-2004:202008-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v1.18.8
    steps:
      - upgrade-0-23-test



workflows:
  version: 2.1
  build-and-release-helm-chart:
    jobs:
      - lint
      - unittest-charts
      - build-lts-upgrade:
          requires:
            - lint
          filters:
            branches:
              only:
                - 'release-0.23'
                - 'lts-to-lts'
      - build-artifact:
          requires:
            - lint
            - unittest-charts

      - test-all-platforms:
          type: approval

      - platform-1-16-15:
          requires:
            - test-all-platforms
            - build-artifact

      - platform-1-17-11:
          requires:
            - test-all-platforms
            - build-artifact

      - platform-1-18-8:
          requires:
            - build-artifact

      - lts-upgrade-0-23-test:
          requires:
            - build-lts-upgrade
          filters:
            branches:
              only:
                - 'release-0.23'
                - 'lts-to-lts'

      - approve-internal-release:
          type: approval
          requires:
            - platform-1-16-15
            - platform-1-17-11
            - platform-1-18-8
          filters:
            branches:
              only:
                - '/release-0\.\d+/'

      - release-to-internal:
          requires:
            - approve-internal-release

      - approve-public-release:
          type: approval
          requires:
            - release-to-internal

          filters:
            branches:
              only:
                - '/release-0\.(12|13|14|15|16|23)/'

      - release-to-public:
          requires:
            - approve-public-release
          filters:
            branches:
              only:
                - '/release-0\.(12|13|14|15|16|23)/'

commands:


  docker-build:
    description: "Build a Docker image"
    parameters:
      dockerfile:
        type: string
        default: Dockerfile
      path:
        type: string
        default: "."
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build the Docker image
          command: |
            set -xe
            image_name="<< parameters.image_name >>"
            docker build -t $image_name --file << parameters.path>>/<< parameters.dockerfile >> --build-arg BUILD_NUMBER=${CIRCLE_BUILD_NUM} << parameters.path >>
            docker save -o << parameters.image_name >>.tar $image_name
      - persist_to_workspace:
          root: .
          paths:
            - './<< parameters.image_name >>.tar'

  upgrade-0-23-test:
    description: "Test LTS to LTS upgrade automation"
    steps:
     - checkout
     - attach_workspace:
         at: /tmp/workspace
     - run:
         name: Load archived Docker image
         command: docker load -i /tmp/workspace/lts-016-023-upgrade.tar
     - run:
         name: Test lts to lts upgrade automation
         command: |
           set -e
           bin/lts-upgrade-0-23-test

  helm-install:
    description: "Install Helm chart from artifact"
    parameters:
      astronomer-tags:
        type: string
        default: "platform"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "fb:bd:3c:2f:ef:af:e9:5b:fe:33:0e:e1:01:80:9f:cf"
      - run:
          name: Install Astronomer chart
          command: |
            set -e
            HELM_CHART_PATH='/tmp/workspace/astronomer-*.tgz' bin/run-ci << parameters.astronomer-tags >>

  publish-github-release:
    description: "Create a release on GitHub"
    parameters:
      tag:
        type: string
        default: "$NEXT_TAG"
    steps:
      - run:
          name: Create a release on GitHub
          command: |
            set -xe
            pyenv global 3.8.5
            pip install astronomer_e2e_test
            astronomer-ci publish-github-release --github-repository $CIRCLE_PROJECT_REPONAME --github-organization $CIRCLE_PROJECT_USERNAME --commitish $CIRCLE_SHA1
