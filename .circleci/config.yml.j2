version: 2.1
executors:
  docker-executor:
    environment:
      GIT_ORG: astronomer
    docker:
      - image: circleci/python:3
jobs:
  lint:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: Install ci tools
          command: ./bin/install-ci-tools 1
      - run:
          name: Lint the Astronomer chart
          command: export PATH=/tmp/bin:$PATH make lint

  build-lts-upgrade:
    executor: docker-executor
    steps:
      - docker-build:
          image_name: lts-016-023-upgrade
          path: "./bin/migration-scripts/lts-to-lts/0.16-to-0.23/playbooks/"

  push-lts-upgrade:
    executor: docker-executor
    steps:
      - push-to-quay-io:
          comma_separated_tags: "latest,$CIRCLE_BUILD_NUM"
          image_name: lts-016-023-upgrade

  unittest-charts:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: unittest the Astronomer chart
          command: make unittest-charts

  build-artifact:
    docker:
      - image: quay.io/astronomer/ap-build:0.1.3
    steps:
      - checkout
      - run:
          name: Package the Astronomer chart
          command: |
            source ./bin/install-ci-tools 1
            make build
      - persist_to_workspace:
          root: "."
          paths:
            - "./*.tgz"

  release-to-internal:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release the Astronomer chart to internal
          command: |
            set -e
            sudo apt-get update && sudo apt-get install -y ca-certificates curl
            pyenv global 3.9.1
            bin/release-helm-chart /tmp/workspace/astronomer-*.tgz

  release-to-public:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release the Astronomer chart to prod
          command: |
            set -e
            sudo apt-get update && sudo apt-get install -y ca-certificates curl
            pyenv global 3.9.1
            bin/release-helm-chart -p /tmp/workspace/astronomer-*.tgz
      - publish-github-release
{% for version in kube_versions %}
  platform-{{ version | replace(".", "-") }}:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v{{ version }}
    steps:
      - helm-install:
          astronomer-tags: "platform postgresql monitoring logging kubed keda"
{% endfor -%}

{% for version in [kube_versions[-1]] %}
  lts-upgrade-0-23-test:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: xlarge
    environment:
      KUBE_VERSION: v{{ version }}
    steps:
      - upgrade-0-23-test

{%- endfor %}

workflows:
  version: 2.1
  build-and-release-upgrader:
    jobs:
      - lint
      - approve-lts-upgrader-build:
          type: approval

      - build-lts-upgrade:
          requires:
            - lint
            - approve-lts-upgrader-build

      - lts-upgrade-0-23-test:
          requires:
            - build-lts-upgrade

      - approve-lts-upgrader-release:
          type: approval
          filters:
            branches:
              only:
                - "release-0.23"
                - "master"
                - "lts-to-lts"

      - push-lts-upgrade:
          requires:
            - approve-lts-upgrader-release
            - lts-upgrade-0-23-test
          context:
            - quay.io
          filters:
            branches:
              only:
                - "release-0.23"
                - "master"
                - "lts-to-lts"

  build-and-release-helm-chart:
    jobs:
      - lint
      - unittest-charts

      - build-artifact:
          requires:
            - lint
            - unittest-charts

      - test-all-platforms:
          type: approval
{% for version in kube_versions %}{% if version == kube_versions[-1:][0] %}
      - platform-{{ version | replace(".", "-") }}:
          requires:
            - build-artifact
{%- else %}
      - platform-{{ version | replace(".", "-") }}:
          requires:
            - test-all-platforms
            - build-artifact
{% endif %}{% endfor %}

      - approve-internal-release:
          type: approval
          filters:
            branches:
              only:
                - '/release-0\.\d+/'

      - release-to-internal:
          requires:
            - approve-internal-release
{%- for version in kube_versions %}
            - platform-{{ version | replace(".", "-") }}{% endfor %}
          filters:
            branches:
              only:
                - '/release-0\.\d+/'

      - approve-public-release:
          type: approval
          requires:
            - release-to-internal

          filters:
            branches:
              only:
                - '/release-0\.(12|13|14|15|16|23)/'

      - release-to-public:
          requires:
            - approve-public-release
          filters:
            branches:
              only:
                - '/release-0\.(12|13|14|15|16|23)/'

commands:
  push-to-quay-io:
    description: "Push a Docker image to Quay.io"
    parameters:
      comma_separated_tags:
        type: string
        default: latest
      docker_repository:
        type: string
        default: $DOCKER_REPO
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/<< parameters.image_name >>.tar
      - run:
          name: Login to Quay.io
          command: echo "$QUAY_PASSWORD" | docker login --username "$QUAY_USERNAME" --password-stdin quay.io
      - run:
          name: Push Docker image(s)
          command: |
            set -xe
            function docker_tag_exists() {
                curl --silent -f -lSL "https://quay.io/api/v1/repository/$1/tag/$2/images" > /dev/null
            }
            function tag_and_push() {
                docker tag "<< parameters.image_name >>" "quay.io/astronomer/<< parameters.image_name >>:$1"
                docker push "quay.io/astronomer/<< parameters.image_name >>:$1"
            }
            for tag in $(echo "<< parameters.comma_separated_tags >>" | sed "s/,/ /g");
            do
              # If the tag looks starts with "v" then a digit, remove the "v"
              pattern="^(v[0-9].*)"
              if [[ $tag =~ $pattern ]]; then
                tag="${tag:1}"
              fi
              if docker_tag_exists "<< parameters.docker_repository >>/<< parameters.image_name >>" "${tag}" ; then
                  if [[ "$tag" -eq "latest" ]]; then
                    tag_and_push "$tag"
                  else
                    echo "This docker tag already exists. Skipping the Docker push!"
                  fi
              else
                tag_and_push "$tag"
              fi
            done

  docker-build:
    description: "Build a Docker image"
    parameters:
      dockerfile:
        type: string
        default: Dockerfile
      path:
        type: string
        default: "."
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build the Docker image
          command: |
            set -xe
            image_name="<< parameters.image_name >>"
            docker build -t $image_name --file << parameters.path>>/<< parameters.dockerfile >> --build-arg BUILD_NUMBER=${CIRCLE_BUILD_NUM} << parameters.path >>
            docker save -o << parameters.image_name >>.tar $image_name
      - persist_to_workspace:
          root: .
          paths:
            - "./<< parameters.image_name >>.tar"

  upgrade-0-23-test:
    description: "Test LTS to LTS upgrade automation"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/lts-016-023-upgrade.tar
      - run:
          name: Test lts to lts upgrade automation
          command: |
            set -e
            bin/lts-upgrade-0-23-test

  helm-install:
    description: "Install Helm chart from artifact"
    parameters:
      astronomer-tags:
        type: string
        default: "platform"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "fb:bd:3c:2f:ef:af:e9:5b:fe:33:0e:e1:01:80:9f:cf"
      - run:
          name: Install Astronomer chart
          command: |
            set -e
            HELM_CHART_PATH='/tmp/workspace/astronomer-*.tgz' bin/run-ci << parameters.astronomer-tags >>

  publish-github-release:
    description: "Create a release on GitHub"
    parameters:
      tag:
        type: string
        default: "$NEXT_TAG"
    steps:
      - run:
          name: Create a release on GitHub
          command: |
            set -xe
            pyenv global 3.9.1
            pip install astronomer_e2e_test
            astronomer-ci publish-github-release --github-repository $CIRCLE_PROJECT_REPONAME --github-organization $CIRCLE_PROJECT_USERNAME --commitish $CIRCLE_SHA1
