#!/usr/bin/env bash

set -e

# Compatibility with older helm charts that used to run crond.
if [[ "$1" == "crond" ]]; then
  exec /usr/local/bin/clean-airflow-logs
fi

# Airflow subcommand
CMD=$2

# Wait for postgres then init the db
if [[ -n $AIRFLOW__CORE__SQL_ALCHEMY_CONN  ]] && [[ $CMD =~ ^(webserver|scheduler|worker)$ ]]; then
  # Wait for database port to open up
  HOST=$(echo "${AIRFLOW__CORE__SQL_ALCHEMY_CONN}" | awk -F: '{print $3}' | awk -F@ '{print $2}')
  PORT=$(echo "${AIRFLOW__CORE__SQL_ALCHEMY_CONN}" | awk -F: '{print $4}' | awk -F/ '{print $1}')
  echo "Waiting for host: ${HOST} ${PORT}"
  while ! nc -w 1 -z "${HOST}" "${PORT}"; do
    sleep 0.001
  done
fi

if [[ -n $AIRFLOW__CELERY__BROKER_URL ]] && [[ $CMD =~ ^(scheduler|worker|flower)$ ]]; then
  # Wait for database port to open up
  HOST=$(echo "${AIRFLOW__CELERY__BROKER_URL}" | awk -F: '{print $3}' | awk -F@ '{print $2}')
  PORT=$(echo "${AIRFLOW__CELERY__BROKER_URL}" | awk -F: '{print $4}' | awk -F/ '{print $1}')
  echo "Waiting for host: ${HOST} ${PORT}"
  while ! nc -w 1 -z "${HOST}" "${PORT}"; do
    sleep 0.001
  done
fi

if [[ $CMD == "webserver" ]]; then
  airflow sync_perm
fi

# Run the original command
exec "$@"
