################################
## Elasticsearch Client Deployment
#################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "elasticsearch.fullname" . }}-client
  labels:
    tier: logging
    component: {{ template "elasticsearch.name" . }}
    chart: {{ template "elasticsearch.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: client
spec:
  replicas: {{ .Values.client.replicas }}
  selector:
    matchLabels:
      tier: logging
      component: {{ template "elasticsearch.name" . }}
      release: {{ .Release.Name }}
      role: client
  template:
    metadata:
      labels:
        tier: logging
        component: {{ template "elasticsearch.name" . }}
        release: {{ .Release.Name }}
        role: client
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/es-configmap.yaml") . | sha256sum }}
{{- if .Values.common.podAnnotations }}
{{ toYaml .Values.common.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.client.podAnnotations }}
{{ toYaml .Values.client.podAnnotations | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      {{- if eq .Values.client.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "elasticsearch.name" . }}
                  release: {{ .Release.Name }}
                  role: client
      {{- else if eq .Values.client.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "elasticsearch.name" . }}
                  release: {{ .Release.Name }}
                  role: client
      {{- end }}
    {{- if .Values.global.platformNodePool.affinity }}
{{ toYaml .Values.global.platformNodePool.affinity | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      initContainers:
      - name: sysctl
        image: {{ template "init.image" . }}
        imagePullPolicy: {{ .Values.images.init.pullPolicy }}
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      serviceAccountName: {{ template "elasticsearch.fullname" . }}          
      containers:
      - name: es-client
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ template "elasticsearch.image" . }}
        imagePullPolicy: {{ .Values.images.es.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "elasticsearch.fullname" . }}-headless-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.client.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        - name: "ES_JAVA_OPTS"
          value: "-Xms{{ .Values.client.heapMemory }} -Xmx{{ .Values.client.heapMemory }}"
        resources:
{{ toYaml .Values.client.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.common.ports.http }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.common.ports.transport }}
          name: transport
          protocol: TCP
        readinessProbe:
          httpGet:
            # local: If true, the request retrieves information from the local node only.
            # Defaults to false, which means information is retrieved from the master node.
            path: /_cluster/health?local=true
            port: {{ .Values.common.ports.http }}
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: {{ .Values.common.ports.http }}
          initialDelaySeconds: 90
        {{- if semverCompare "^1.16-0" .Capabilities.KubeVersion.Version }}
        # This feature is available in Kubernetes 1.16+
        startupProbe:
          httpGet:
            # without local=true, we are waiting for this pod's
            # es-master to report that the cluster is ready.
            path: /_cluster/health
            port: {{ .Values.common.ports.http }}
          failureThreshold: 30
          periodSeconds: 10
        {{- end }}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
      volumes:
      - name: config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}-config
