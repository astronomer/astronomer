################################
## NGINX Elasticsearch Deployment
#################################
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "nginx-es.fullname" . }}-nginx
  labels:
    tier: {{ template "nginx-es.name" . }}
    component: es-ingress-controller
    chart: {{ template "nginx-es.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      tier: {{ template "nginx-es.name" . }}
      component: es-ingress-controller
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: {{ template "nginx-es.name" . }}
        component: es-ingress-controller
        release: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/nginx/nginx-es-configmap.yaml") . | sha256sum }}
{{- if .Values.common.podAnnotations }}
{{ toYaml .Values.common.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.nginx.podAnnotations }}
{{ toYaml .Values.nginx.podAnnotations | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      affinity:
{{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      restartPolicy: Always
      containers:
        - name: nginx
          image: {{ template "nginx-es.image" . }}
          imagePullPolicy: {{ .Values.images.nginx.pullPolicy }}
          resources: {{ toYaml .Values.nginx.resources | indent 12 }}
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx
          ports:
            - name: http
              containerPort: {{ .Values.common.ports.http }}
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
      volumes:
        - name: nginx-config-volume
          configMap:
            name: {{ .Release.Name }}-nginx-es
            items:
              - key: nginx.conf
                path: nginx.conf
