######################################
## Elasticsearch Master StatefulSet ##
######################################
{{- if or (eq .Values.global.plane.mode "data") (eq .Values.global.plane.mode "unified") }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "elasticsearch.fullname" . }}-master
  labels:
    tier: logging
    component: {{ template "elasticsearch.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    role: master
    plane: {{ .Values.global.plane.mode }}
spec:
  {{- if and .Values.common.persistence.enabled .Values.common.persistence.persistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy: {{- toYaml .Values.common.persistence.persistentVolumeClaimRetentionPolicy | nindent 4 }}
  {{ end }}
  serviceName: {{ template "elasticsearch.fullname" . }}-master
  replicas: {{ .Values.master.replicas }}
  selector:
    matchLabels:
      tier: logging
      component: {{ template "elasticsearch.name" . }}
      release: {{ .Release.Name }}
      role: master
  template:
    metadata:
      labels:
        tier: logging
        component: {{ template "elasticsearch.name" . }}
        release: {{ .Release.Name }}
        role: master
        app: {{ template "elasticsearch.name" . }}-master
        version: {{ .Chart.Version }}
        {{- include "global.podLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/es-configmap.yaml") . | sha256sum }}
        {{- if .Values.global.podAnnotations }}
        {{- toYaml .Values.global.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.common.podAnnotations }}
        {{- toYaml .Values.common.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.master.podAnnotations }}
        {{- toYaml .Values.master.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
{{- if eq .Values.global.openshiftEnabled false }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
{{- end }}
      nodeSelector:
        {{- toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | nindent 8 }}
      {{- if eq .Values.master.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "elasticsearch.name" . }}
                  release: {{ .Release.Name }}
                  role: master
      {{- else if eq .Values.master.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "elasticsearch.name" . }}
                  release: {{ .Release.Name }}
                  role: master
      {{- end }}
    {{- if .Values.global.platformNodePool.affinity }}
      {{- toYaml .Values.global.platformNodePool.affinity | nindent 8 }}
    {{- end }}
      tolerations: {{- toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | nindent 8 }}
      {{- include "elasticsearch.imagePullSecrets" . | nindent 6 }}
      initContainers:
      - name: es-config-dir-copier
        image: {{ template "elasticsearch.image" . }}
        command:
          - bash
          - -xc
          - cp -vr /usr/share/elasticsearch/config/* /usr/share/elasticsearch/config_copy
        imagePullPolicy: {{ .Values.images.init.pullPolicy }}
        resources: {{- toYaml .Values.master.initResources | nindent 10 }}
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: es-config-dir
            mountPath: /usr/share/elasticsearch/config_copy
      {{- if (.Values.sysctlInitContainer.enabled) }}
      - name: sysctl
        image: {{ template "init.image" . }}
        imagePullPolicy: {{ .Values.images.init.pullPolicy }}
        command: ["sysctl", "-w", "vm.max_map_count={{ .Values.sysctlInitContainer.sysctlVmMaxMapCount}}"]
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
          privileged: true
        resources: {{ toYaml .Values.master.initResources | nindent 10 }}
        {{- if .Values.sysctlInitContainer.livenessProbe }}
        livenessProbe: {{- tpl (toYaml .Values.sysctlInitContainer.livenessProbe) . | nindent 10 }}
        {{- end }}
        {{- if .Values.sysctlInitContainer.readinessProbe }}
        readinessProbe: {{- tpl (toYaml .Values.sysctlInitContainer.readinessProbe) . | nindent 10 }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ template "elasticsearch.serviceAccountName" . }}
      containers:
      - name: es-master
        securityContext:
          readOnlyRootFilesystem: true
          {{- if .Values.master.securityContext }}
          {{- toYaml .Values.master.securityContext | nindent 10 }}
          {{- else }}
{{- template "elasticsearch.securityContext" . }}
          {{- end }}
        image: {{ template "elasticsearch.image" . }}
        imagePullPolicy: {{ .Values.images.es.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "elasticsearch.fullname" . }}-headless-discovery
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.master.heapMemory }} -Xmx{{ .Values.master.heapMemory }}"
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.master.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        - name: node.roles
          value: "{{ template "elasticsearch.master.roles" . }}"
        resources: {{ toYaml .Values.master.resources | nindent 10 }}
        ports:
        - containerPort: {{ .Values.common.ports.transport }}
          name: transport
          protocol: TCP
        {{- if .Values.master.readinessProbe }}
        readinessProbe: {{- tpl (toYaml .Values.master.readinessProbe) . | nindent 10 }}
        {{- else }}
        readinessProbe:
          httpGet:
            # local: If true, the request retrieves information from the local node only.
            # Defaults to false, which means information is retrieved from the master node.
            path: /_cluster/health?local=true
            port: {{ .Values.common.ports.http }}
          initialDelaySeconds: 5
        {{- end }}
        {{- if .Values.master.livenessProbe }}
        livenessProbe: {{- tpl (toYaml .Values.master.livenessProbe) . | nindent 10 }}
        {{- else }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.common.ports.transport }}
        {{- end }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: es-config-dir
          mountPath: /usr/share/elasticsearch/config
        - name: tmp
          subPath: logs
          mountPath: /usr/share/elasticsearch/logs
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          subPath: elasticsearch.yml
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
      volumes:
      - name: es-config-dir
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}-config
  {{- if not .Values.common.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      {{- if .Values.common.persistence.annotations }}
      annotations:
        {{- toYaml .Values.common.persistence.annotations | nindent 10 }}
      {{- end }}
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.master.persistence.size }}
      {{ include "elasticsearch.storageClass" . }}
  {{- end }}
{{- end }}
