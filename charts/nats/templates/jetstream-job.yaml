########################################################
## Astronomer Platform Namespace label configure Hook ##
########################################################
{{- if .Values.global.clusterRoles -}}
{{- if or .Values.nats.jetstream.enabled .Values.global.nats.jetStream.enabled }}
{{- if or (eq .Values.global.plane.mode "control") (eq .Values.global.plane.mode "unified") }}
{{- if .Values.global.rbacEnabled }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-2"
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-jetstream-role
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["patch", "update", "get"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["delete", "get", "list", "patch"]
  resourceNames:
  - {{ .Release.Name }}-nats
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-2"
  name: {{ .Release.Name }}-jetstream-rolebinding
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: {{ template "jetStream.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  apiGroup: ""
roleRef:
  kind: Role
  name: {{ .Release.Name }}-jetstream-role
  apiGroup: ""
{{- if .Values.commander.serviceAccount.create }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "3"
  name: {{ template "jetStream.serviceAccountName" . }}
  labels:
    tier: jetstream-migrator
    component: jetstream-migrator
    release: {{ .Release.Name }}
    plane: {{ .Values.global.plane.mode }}
{{- end }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-jetstream-job
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "5"
  labels:
    app: {{ template "nats.name" . }}
    tier: nats
    version: {{ .Chart.Version }}
    component: jetstream-migrator
    release: {{ .Release.Name }}
    plane: {{ .Values.global.plane.mode }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "nats.name" . }}
        tier: nats
        component: jetstream-migrator
        version: {{ .Chart.Version }}
        release: {{ .Release.Name }}
        plane: {{ .Values.global.plane.mode }}
        {{- include "global.podLabels" . | nindent 8 }}
      {{- if or .Values.global.podAnnotations .Values.global.istio.enabled }}
      annotations:
      {{- if .Values.global.istio.enabled }}
        sidecar.istio.io/inject: "false"
      {{- end }}
      {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | indent 8 }}
      {{- end }}
      {{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "jetStream.serviceAccountName" . }}
      nodeSelector: {{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | nindent 8 }}
      affinity: {{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | nindent 8 }}
      tolerations: {{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | nindent 8 }}
{{- include "nats.imagePullSecrets" . | indent 6 }}
      containers:
      - name: jetstream-template-fixer
        image: {{ template "dbBootstrapper.image" . }}
        securityContext:
          readOnlyRootFilesystem: true
          {{ template "nats.securityContext" . }}
        {{- if .Values.nats.readinessProbe }}
        readinessProbe: {{- tpl (toYaml .Values.nats.readinessProbe) . | nindent 10 }}
        {{- end }}
        {{ if .Values.nats.livenessProbe }}
        livenessProbe: {{- tpl (toYaml .Values.nats.livenessProbe) . | nindent 10 }}
        {{- end }}
        resources: {{ toYaml .Values.nats.resources | nindent 10 }}
        command:
        - /bin/sh
        - -c
        - |
          {{- if .Values.global.nats.jetStream.enabled }}
          data=`kubectl get ns {{ .Release.Namespace }} -o=jsonpath='{.metadata.labels.jetstreamEnabled}'`
          if [[ "$data" = "" ]] ; then
            kubectl delete sts {{ .Release.Name }}-nats --cascade=orphan -n {{ .Release.Namespace }};
            kubectl label namespace {{ .Release.Namespace }} jetstreamEnabled=true;
            kubectl label namespace {{ .Release.Namespace }} stanEnabled-
          else
            echo "{{ .Release.Name }}-Nats is already enabled with jetstream. skipping sts cleanup"
          fi
          {{ end }}
{{ end }}
{{ end }}
{{- end }}
