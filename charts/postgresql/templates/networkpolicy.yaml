##############################
# postgresql network policy
##############################
{{- if .Values.global.networkPolicy.enabled }}
{{- if .Values.networkPolicy.enabled }}
kind: NetworkPolicy
apiVersion: {{ template "apiVersion.NetworkPolicy" . }}
metadata:
  name: {{ template "postgresql.fullname" . }}
  labels:
    app: {{ template "postgresql.name" . }}
    chart: {{ template "postgresql.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{ if .Values.global.enableArgoCDAnnotation }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  {{- end }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "postgresql.name" . }}
      release: {{ .Release.Name | quote }}
  ingress:
    # Allow inbound connections
    - ports:
      - port: {{ template "postgresql.port" . }}
    {{- if not .Values.networkPolicy.allowExternal }}
      from:
      - podSelector:
          matchLabels:
            release: {{ .Release.Name }}
            tier: astronomer
      - podSelector:
          matchLabels:
            release: {{ .Release.Name }}
            component: grafana
      {{- if .Values.global.networkNSLabels  }}
      - namespaceSelector:
          matchLabels:
            platform: {{ .Release.Name }}
        podSelector:
          matchLabels:
            component: pgbouncer
      {{- else }}
      - podSelector:
          matchLabels:
            component: pgbouncer
        namespaceSelector: {}
      {{- end }}
      - podSelector:
          matchLabels:
            release: {{ .Release.Name }}
            app: prometheus-postgres-exporter
      - podSelector:
          matchLabels:
            {{ template "postgresql.fullname" . }}-client: "true"
      - podSelector:
          matchLabels:
            app: {{ template "postgresql.name" . }}
            release: {{ .Release.Name | quote }}
            role: slave
    {{- end }}
    # Allow prometheus scrapes
    - ports:
      - port: 9187
{{- end }}
{{- end }}
