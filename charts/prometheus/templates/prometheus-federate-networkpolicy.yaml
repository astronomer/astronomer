################################
## Prometheus NetworkPolicy   ##
################################
{{- if and .Values.global.networkPolicy.enabled (eq .Values.global.plane.mode "data") }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ template "prometheus.fullname" . }}-prom-proxy-policy
  labels:
    tier: monitoring
    component: {{ template "prometheus.name" . }}-federation-auth
    chart: {{ template "prometheus.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    plane: {{ .Values.global.plane.mode }}
spec:
  podSelector:
    matchLabels:
      tier: monitoring
      component: {{ template "prometheus.name" . }}-federation-auth
      release: {{ .Release.Name }}
  policyTypes:
  - Ingress
  ingress:
  - from:
    {{- if .Values.global.authSidecar.enabled  }}
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
    {{- if .Values.global.authSidecar.ingressAllowedNamespaces }}
    - namespaceSelector:
        matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: In
          values: {{ .Values.global.authSidecar.ingressAllowedNamespaces | toJson }}
    {{- end }}
    {{- else }}
    - podSelector:
        matchLabels:
          tier: nginx
          component: dp-ingress-controller
          release: {{ .Release.Name }}
    {{- end }}
    # It is sometimes useful to whitelist other pods,
    # for example admin Airflow tasks.
    {{- range .Values.ingressNetworkPolicyExtraSelectors }}
    -
    {{- toYaml . | nindent 6 }}
    {{- end }}
    ports:
    - protocol: TCP
      port: {{ .Values.global.authSidecar.port }}
{{- end }}
