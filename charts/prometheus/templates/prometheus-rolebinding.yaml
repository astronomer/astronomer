#################################
## Prometheus RoleBinding
#################################
# Either:
# 1. Do not create anything is rbacEnabled is disabled
# 2. Create ClusterRoleBinding if clusterRoles enabled and namespacePools disabled
# 3. Create RoleBinding for each namespace in the namespacePool (+ astronomer namespace) if enabled
{{- $useClusterRoles := and .Values.global.rbacEnabled .Values.global.clusterRoles (not .Values.global.features.namespacePools.enabled)}}
{{- $shouldCreateResources := and .Values.global.rbacEnabled (or .Values.global.clusterRoles .Values.global.features.namespacePools.enabled) }}
{{- $namespaces := .Values.global.features.namespacePools.namespaces.names }}
{{- if $useClusterRoles }}
  {{- $namespaces = list .Release.Namespace}}
{{- else }}
  {{- $namespaces = append $namespaces .Release.Namespace }}
{{- end }}

{{- $rootContext := . }}

{{- if $shouldCreateResources }}
{{- range $i, $namespaceName := $namespaces -}}
---
apiVersion: {{ template "apiVersion.rbac" . }}
kind: {{ if $useClusterRoles }}ClusterRoleBinding{{ else }}RoleBinding{{ end }}
metadata:
  name: {{ template "prometheus.fullname" $rootContext }}
  {{- if not $useClusterRoles }}
  namespace: {{ $namespaceName }}
  {{- end }}
  labels:
    tier: monitoring
    component: {{ template "prometheus.name" $rootContext }}
    chart: {{ template "prometheus.chart" $rootContext }}
    release: {{ $rootContext.Release.Name }}
    heritage: {{ $rootContext.Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ if $useClusterRoles }}ClusterRole{{ else }}Role{{ end }}
  name: {{ template "prometheus.fullname" $rootContext }}
subjects:
  - kind: ServiceAccount
    name: {{ template "prometheus.fullname" $rootContext }}
    namespace: {{ $rootContext.Release.Namespace }}
{{ end }}
{{- end }}
