{{/* vim: set filetype=mustache: */}}
{{/*
Expand the name of the chart.
*/}}
{{- define "prometheus.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
*/}}
{{- define "prometheus.fullname" -}}
{{- $name := default .Chart.Name .Values.nameOverride -}}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{ define "prometheus.serviceAccountName" -}}
{{- if and .Values.serviceAccount.create .Values.global.rbacEnabled -}}
{{ default (printf "%s" (include "prometheus.fullname" . )) .Values.serviceAccount.name }}
{{- else -}}
    {{ default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "prometheus.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{ define "prometheus.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.repository }}/ap-prometheus:{{ .Values.images.prometheus.tag }}
{{- else -}}
{{ .Values.images.prometheus.repository }}:{{ .Values.images.prometheus.tag }}
{{- end }}
{{- end }}


{{ define "configReloader.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.repository }}/ap-configmap-reloader:{{ .Values.images.configReloader.tag }}
{{- else -}}
{{ .Values.images.configReloader.repository }}:{{ .Values.images.configReloader.tag }}
{{- end }}
{{- end }}

{{ define "filesdReloader.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.repository }}/ap-kuiper-reloader:{{ .Values.images.filesdReloader.tag }}
{{- else -}}
{{ .Values.images.filesdReloader.repository }}:{{ .Values.images.filesdReloader.tag }}
{{- end }}
{{- end }}

{{ define "prometheus.init.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.repository }}/ap-init:{{ .Values.images.init.tag }}
{{- else -}}
{{ .Values.images.init.repository }}:{{ .Values.images.init.tag }}
{{- end }}
{{- end }}

{{ define "prometheus.url" -}}
prometheus.{{ .Values.global.baseDomain }}
{{- end }}

{{/*
Return  the proper Storage Class
*/}}
{{- define "prometheus.storageClass" -}}
storageClassName: {{ or .Values.persistence.storageClassName .Values.global.storageClass | default "" }}
{{- end -}}

{{/*
Return the proper Docker Image Registry Secret Names
*/}}
{{- define "prometheus.imagePullSecrets" -}}
{{- if and .Values.global.privateRegistry.enabled .Values.global.privateRegistry.secretName }}
imagePullSecrets:
  - name: {{ .Values.global.privateRegistry.secretName }}
{{- end -}}
{{- end -}}

{{- define "prometheus.securityContext" -}}
{{- if or (eq ( toString ( .Values.securityContext.runAsUser )) "auto") ( .Values.global.openshiftEnabled )  }}
{{- omit  .Values.securityContext "runAsUser" | toYaml | nindent 12 }}
{{- else }}
{{- .Values.securityContext | toYaml | nindent 12 }}
{{- end -}}
{{- end }}

{{- define "prometheus.airflowMetricsActionDrop" }}
- source_labels: [__name__]
  regex: 'airflow_task_instance_created_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_task_removed_from_dag_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_task_restored_to_dag_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_duration_success_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_duration_failed_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_dependency_check_.*_count'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_dependency_check_.*_sum'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_schedule_delay_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_duration_success_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dagrun_duration_failed_.*'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dag_processing_last_duration_.*_count'
  action: drop
- source_labels: [__name__]
  regex: 'airflow_dag_processing_last_duration_.*_sum'
  action: drop
{{- end }}
