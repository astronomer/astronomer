################################
## Prometheus Config ConfigMap
#################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "prometheus.fullname" . }}-config
  labels:
    tier: monitoring
    component: {{ template "prometheus.name" . }}
    chart: {{ template "prometheus.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  prometheus.yaml: |-
    global:
      scrape_interval: 10s
      evaluation_interval: 30s

    # Configure Alertmanager
    alerting:
      alertmanagers:
        - kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - {{ .Release.Namespace }}
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_component]
            regex: alertmanager
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            regex: {{ .Release.Namespace }}
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            regex: alertmanager
            action: keep

    # Configure built in alerting rules
    rule_files:
      - "/etc/prometheus/alerts.d/*.yaml"

    # Configure targets to scrape
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: ["localhost:9090"]

      - job_name: nginx
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: "^{{ .Release.Name }}-nginx"
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: elasticsearch
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: "^{{ .Release.Name }}-elasticsearch-exporter"
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # - job_name: registry
      #   kubernetes_sd_configs:
      #     - role: service
      #       namespaces:
      #         names:
      #           - {{ .Release.Namespace }}
      #   relabel_configs:
      #     - source_labels: [__meta_kubernetes_service_name]
      #       action: keep
      #       regex: "^{{ .Release.Name }}-registry"
      #     - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      #       action: keep
      #       regex: true
      #     - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      #       action: replace
      #       regex: ([^:]+)(?::\d+)?;(\d+)
      #       replacement: $1:$2
      #       target_label: __address__

      {{- if .Values.global.veleroEnabled }}
      - job_name: velero
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - velero
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: "velero"
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
      {{- end }}

      - job_name: kube-state
        scrape_interval: 5s # Faster scrape to power dashboards
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: "^{{ .Release.Name }}-kube-state"
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
        metric_relabel_configs:
          # Only keep metrics that start with platforms namespace (includes airflow children)
          - action: keep
            source_labels: [namespace]
            regex: "^{{ .Release.Namespace }}.*"
          - source_labels: [deployment]
            regex: "^(.*-.*-[0-9]{4})-.*"
            replacement: "$1"
            target_label: release
          # Required for multi-namespace mode
          - source_labels: [namespace]
            regex: "^{{ .Release.Namespace }}-(.*-.*-[0-9]{4})$"
            replacement: "$1"
            target_label: release
          # Required for single-namespace mode
          - source_labels: [pod]
            regex: "^(.*-.*-[0-9]{4})-.*"
            replacement: "$1"
            target_label: release

      - job_name: fluentd
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: "^{{ .Release.Name }}-fluentd-.*"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'fluentd_tail_file_.*'
            action: drop

      {{- if .Values.global.nodeExporterEnabled }}
      - job_name: node-exporter
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: "^{{ .Release.Name }}-prometheus-node-exporter-.*"
      {{- end }}

      - job_name: airflow
        scrape_interval: 5s # Faster scrape to power dashboards
        kubernetes_sd_configs:
          - role: service
          {{- if .Values.global.singleNamespace }}
            namespaces:
              names:
                - {{ .Release.Namespace }}
          {{- end }}
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_service_annotation_astronomer_io_platform_release]
            action: keep
            regex: ^{{ .Release.Name }}$
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
        metric_relabel_configs:
          - source_labels: [instance]
            regex: "^(.*-.*-[0-9]{4})-.*$"
            replacement: "$1"
            target_label: deployment
            # Drop metrics that are task or dag specific
          - source_labels: [__name__]
            regex: 'airflow_task_instance_created_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_task_removed_from_dag_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_task_restored_to_dag_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_duration_success_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_duration_failed_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_dependency_check_.*_count'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_dependency_check_.*_sum'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_schedule_delay_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_duration_success_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dagrun_duration_failed_.*'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dag_processing_last_duration_.*_count'
            action: drop
          - source_labels: [__name__]
            regex: 'airflow_dag_processing_last_duration_.*_sum'
            action: drop

      {{- if not .Values.global.singleNamespace }}
      - job_name: kubernetes-nodes
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
        metric_relabel_configs:
            # Only keep metrics that start with platforms namespace (includes airflow children)
          - action: keep
            source_labels: [namespace]
            regex: "^{{ .Release.Namespace }}.*"

      - job_name: kubernetes-nodes-cadvisor
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - action: replace
            source_labels: [id]
            regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
            target_label: rkt_container_name
            replacement: '${2}-${1}'
          - action: replace
            source_labels: [id]
            regex: '^/system\.slice/(.+)\.service$'
            target_label: systemd_service_name
            replacement: '${1}'

            # Only keep metrics that start with platforms namespace (includes airflow children)
          - action: keep
            source_labels: [namespace]
            regex: "^{{ .Release.Namespace }}.*"

            # Drop some unnecessary labels
          - regex: "^(id|name)"
            action: labeldrop

            # Add deployment name via container_name
          - source_labels: [pod_name]
            regex: "^(.*-.*-[0-9]{4})-.*"
            replacement: "$1"
            target_label: deployment

            # This will patch up most metrics
          - source_labels: [container_name]
            regex: "^(.*)$"
            replacement: "$1"
            target_label: component_name

          - source_labels: [pod_name]
            regex: "^.*-.*-(.*)$"
            replacement: "$1"
            target_label: component_instance

            # Network level metrics are exposed at the POD level
            # Deployment (others) format
          - source_labels: [__name__, container_name, pod_name]
            regex: "container_network_.*;(.*)-(.*)-([0-9a-z]{5,10}-[0-9a-z]{5})$"
            replacement: "$1"
            target_label: deployment

          - source_labels: [__name__, container_name, pod_name]
            regex: "container_network_.*;(.*)-(.*)-([0-9a-z]{5,10}-[0-9a-z]{5})$"
            replacement: "$2"
            target_label: component_name

          - source_labels: [__name__, container_name, pod_name]
            regex: "container_network_.*;(.*)-(.*)-([0-9a-z]{5,10}-[0-9a-z]{5})$"
            replacement: "$3"
            target_label: component_instance

            # StatefulSet (workers) format
          - source_labels: [__name__, pod_name]
            regex: "^container_network_.*;(.*)-(.*)-([0-9]+)$"
            replacement: "$2"
            target_label: component_name

          - source_labels: [__name__, pod_name]
            regex: "^container_network_.*;(.*)-(.*)-([0-9]+)$"
            replacement: "$3"
            target_label: component_instance

      {{- end }}

      {{- if .Values.global.blackboxExporterEnabled }}
      # Will probe the endpoints listed under targets looking for a 2XX HTTP response
      - job_name: 'blackbox HTTP'
        metrics_path: /probe
        params:
          module: [http_2xx]  # Look for a HTTP 200 response.
        static_configs:
          - targets:
            - http://{{.Release.Name}}-commander.{{.Release.Namespace}}:8880/healthz
            - http://{{.Release.Name}}-grafana.{{.Release.Namespace}}:3000/api/health
            - http://{{.Release.Name}}-houston.{{.Release.Namespace}}:8871/v1/healthz
            - http://{{.Release.Name}}-kibana.{{.Release.Namespace}}:5601
            - http://{{.Release.Name}}-registry.{{.Release.Namespace}}:5000
            - http://{{.Release.Name}}-elasticsearch.{{.Release.Namespace}}:9200/_cluster/health?local=true
          {{- range .Values.httpTargets }}
            - {{ . }}
          {{- end }}
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: {{.Release.Name}}-prometheus-blackbox-exporter.{{.Release.Name}}:9115  # The blackbox exporter's real hostname:port.


      # TODO Need to include this for only cloud deployments
      # Only testing for ability to open a TCP connection. 
      - job_name: 'blackbox TCP'
        metrics_path: /probe
        params:
          module: [tcp_connect]  # Try tcp handshake on a port
        static_configs:
          - targets:
            - pg-sqlproxy-gcloud-sqlproxy.{{.Release.Namespace}}:5432 # TCP Probe. only in cloud
            - tiller-deploy.kube-system:44134 # TCP Probe 
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: {{.Release.Name}}-prometheus-blackbox-exporter.{{.Release.Namespace}}:9115  # The blackbox exporter's real hostname:port.

      # Tests that DNS in cluster is working. 
      # target should be your cluster DNS service IP
      - job_name: 'blackbox DNS'
        metrics_path: /probe
        params:
          module: [dns_int]
        static_configs:
          - targets:
            {{- range .Values.dnsTargets }}
            - {{ . }}
            {{- end }}
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: {{.Release.Name}}-prometheus-blackbox-exporter.{{.Release.Namespace}}:9115
        {{- end }}
