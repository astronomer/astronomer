
# Default values for postgres-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

images:
  operator:
    repository: quay.io/astronomer/ap-postgres-operator
    tag: 1.8.1
    pullPolicy: IfNotPresent

operator:
  replicas: 1
  imagePullSecrets: []
  resources:
    requests:
      cpu: 100m
      memory: 250Mi
    limits:
      cpu: 500m
      memory: 500Mi


  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  serviceAccount:
    # create specifies whether a service account should be created for the operator.
    create: true

    # annotations to add to the service account
    annotations: {}

    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  extraEnvs: []
  # In order to use the CRD OperatorConfiguration instead, uncomment these lines and comment out the two lines above
  # - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
  #  value: postgresql-operator-default-configuration
  # Define an ID to isolate controllers from each other
  # - name: CONTROLLER_ID
  #   value: "second-operator"

  config:
    api_port: "8080"
    aws_region: eu-central-1
    cluster_domain: cluster.local
    cluster_history_entries: "1000"
    cluster_labels: application:spilo
    cluster_name_label: cluster-name
    connection_pooler_image: "registry.opensource.zalan.do/acid/pgbouncer:master-22"
    crd_categories: "all"
    db_hosted_zone: db.example.com
    debug_logging: "true"
    docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p5
    enable_ebs_gp3_migration: "false"
    enable_master_load_balancer: "false"
    enable_master_pooler_load_balancer: "false"
    enable_password_rotation: "false"
    enable_pgversion_env_var: "true"
    enable_replica_load_balancer: "false"
    enable_replica_pooler_load_balancer: "false"
    enable_spilo_wal_path_compat: "true"
    enable_team_member_deprecation: "false"
    enable_teams_api: "false"
    external_traffic_policy: "Cluster"
    logical_backup_docker_image: "registry.opensource.zalan.do/acid/logical-backup:v1.8.1"
    logical_backup_job_prefix: "logical-backup-"
    logical_backup_provider: "s3"
    logical_backup_s3_bucket: "my-bucket-url"
    logical_backup_s3_sse: "AES256"
    logical_backup_schedule: "30 00 * * *"
    major_version_upgrade_mode: "manual"
    master_dns_name_format: "{cluster}.{team}.{hostedzone}"
    patroni_api_check_interval: "1s"
    patroni_api_check_timeout: "5s"
    pdb_name_format: "postgres-{cluster}-pdb"
    pod_deletion_wait_timeout: 10m
    pod_label_wait_timeout: 10m
    pod_management_policy: "ordered_ready"
    pod_role_label: spilo-role
    pod_service_account_name: "postgres-pod"
    pod_terminate_grace_period: 5m
    ready_wait_interval: 3s
    ready_wait_timeout: 30s
    repair_period: 5m
    replica_dns_name_format: "{cluster}-repl.{team}.{hostedzone}"
    replication_username: standby
    resource_check_interval: 3s
    resource_check_timeout: 10m
    resync_period: 30m
    ring_log_lines: "100"
    role_deletion_suffix: "_deleted"
    secret_name_template: "{username}.{cluster}.credentials.{tprkind}.{tprgroup}"
    spilo_allow_privilege_escalation: "true"
    spilo_fsgroup: "103"
    spilo_privileged: "false"
    storage_resize_mode: "pvc"
    super_username: postgres
    watched_namespace: "*"
    workers: "8"

postgres:
  clusterName: acid-minimal-cluster
  config:
    tls:
      secretName: astronomer-postgres-tls-secret
      certificateFile: "tls.crt"
      privateKeyFile: "tls.key"
      caSecretName: private-ca
    teamId: "acid"
    volume:
      size: 1Gi
    numberOfInstances: 2
    users:
      zalando:  # database owner
      - superuser
      - createdb
      foo_user: []  # role for application foo
    databases:
      foo: zalando  # dbname: owner
    preparedDatabases:
      bar: {}
    postgresql:
      version: "14"
