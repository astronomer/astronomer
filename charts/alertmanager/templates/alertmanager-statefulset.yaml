################################
## Alertmanager StatefulSet
#################################
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "alertmanager.fullname" . }}
  labels:
    tier: monitoring
    component: {{ template "alertmanager.name" . }}
    chart: {{ template "alertmanager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ template "alertmanager.fullname" . }}
  selector:
    matchLabels:
      tier: monitoring
      component: {{ template "alertmanager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: monitoring
        component: {{ template "alertmanager.name" . }}
        release: {{ .Release.Name }}
        app: {{ template "alertmanager.name" . }}
        version: {{ .Chart.Version }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/alertmanager-configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        fsGroup: 65534
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      affinity:
{{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      restartPolicy: Always
{{- include "alertmanager.imagePullSecrets" . | indent 6 }}
      containers:
        - name: alertmanager
          image: {{ template "alertmanager.image" . }}
          imagePullPolicy: {{ .Values.images.alertmanager.pullPolicy }}
          env:
            {{- if .Values.enableNonRFC1918 }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          args:
            - --config.file=/etc/config/alertmanager.yaml
            - --storage.path={{ .Values.dataDir }}
          {{- if .Values.global.baseDomain }}
            - --web.external-url=https://alertmanager.{{ .Values.global.baseDomain }}
          {{- end }}
          {{- if .Values.disableClustering }}
            - --cluster.listen-address=
          {{- end }}
          {{- if .Values.enableNonRFC1918 }}
            - --cluster.advertise-address=$(POD_IP):9094
          {{- end }}
          ports:
            - containerPort: {{ .Values.ports.http }}
              name: alertmanager
          readinessProbe:
            httpGet:
              path: {{ .Values.prefixURL }}/#/status
              port: {{ .Values.ports.http }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data
              mountPath: {{ .Values.dataDir }}
        {{- if .Values.global.authSidecar.enabled  }}
        - name: auth-proxy
          image: "{{ .Values.global.authSidecar.repository }}:{{ .Values.global.authSidecar.tag }}"
          imagePullPolicy: {{ .Values.global.authSidecar.pullPolicy }}
          {{- if .Values.global.authSidecar.resources }}
          resources: {{- toYaml .Values.global.authSidecar.resources | nindent 12 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.global.authSidecar.port }}
            name: auth-proxy
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.global.authSidecar.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.global.authSidecar.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/
            name: alertmanager-sidecar-conf
        {{- end }}
      volumes:
        {{- if .Values.global.authSidecar.enabled }}
        - name: alertmanager-sidecar-conf
          configMap:
            name: {{ template "alertmanager.fullname" . }}-nginx-conf
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ template "alertmanager.fullname" . }}
            items:
              - key: alertmanager.yaml
                path: alertmanager.yaml
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- if .Values.persistence.annotations }}
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{ include "alertmanager.storageClass" . }}
  {{- end }}
