################################
## Alertmanager StatefulSet
#################################
kind: StatefulSet
apiVersion: {{ template "apiVersion.StatefulSet" . }}
metadata:
  name: {{ template "alertmanager.fullname" . }}
  labels:
    tier: monitoring
    component: {{ template "alertmanager.name" . }}
    chart: {{ template "alertmanager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ template "alertmanager.fullname" . }}
  selector:
    matchLabels:
      tier: monitoring
      component: {{ template "alertmanager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: monitoring
        component: {{ template "alertmanager.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/alertmanager-configmap.yaml") . | sha256sum }}
    spec:
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      affinity:
{{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      restartPolicy: Always
      containers:
        - name: alertmanager
          image: {{ template "alertmanager.image" . }}
          imagePullPolicy: {{ .Values.images.alertmanager.pullPolicy }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          args:
            - --config.file=/etc/config/alertmanager.yaml
            - --storage.path={{ .Values.dataDir }}
          {{- if .Values.global.baseDomain }}
            - --web.external-url=https://alertmanager.{{ .Values.global.baseDomain }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.ports.http }}
              name: alertmanager
          readinessProbe:
            httpGet:
              path: {{ .Values.prefixURL }}/#/status
              port: {{ .Values.ports.http }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data
              mountPath: {{ .Values.dataDir }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "alertmanager.fullname" . }}
            items:
              - key: alertmanager.yaml
                path: alertmanager.yaml
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
      {{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName }}
      {{- end }}
  {{- end }}
