nodeSelector: {}
affinity: {}
tolerations: []

pod:
  securityContext: {}
container:
  securityContext: {}
images:
  fluentd:
    repository: quay.io/astronomer/ap-fluentd
    tag: 1.18.0
    pullPolicy: IfNotPresent

elasticsearch:
  # host: 'elasticsearch-client'
  port: 9200
  buffer_chunk_limit: 2M
  buffer_queue_limit: 8

livenessProbe: {}
  # exec:
  #   command:
  #   - /bin/bash
  #   - -c
  #   - if (( $(ruby -e "require 'net/http';require 'uri';uri = URI.parse('http://127.0.0.1:{{ .Values.ports.promScrape }}/metrics');response
  #     = Net::HTTP.get_response(uri);puts response.body" | grep 'fluentd_output_status_buffer_queue_length{'
  #     | awk '{ print ($NF > 8) }') )); then exit 1; fi; exit 0
  # failureThreshold: 3
  # initialDelaySeconds: 30
  # periodSeconds: 15
  # successThreshold: 1
  # timeoutSeconds: 5
readinessProbe: {}

ports:
  promScrape: 24231

# Configure resources
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

additionalVolumeMounts: []
additionalVolumes: []

# Configure log forwarding to S3
s3:
  enabled: false
  path: ~
  role_arn: ~
  role_session_name: ~
  s3_bucket: ~
  s3_region: ~
  use_server_side_encryption: ~

priorityClassName: ~

extraEnv: ~

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ~

podAnnotations: {}
