---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "stan.name" . }}
  labels:
    app: {{ template "stan.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  selector:
    matchLabels:
      app: {{ template "stan.name" . }}

  replicas: {{ include "stan.replicaCount" .  | required ".Values.stan.replicas should be greater or equal to 3 in clustered mode" }}

  # NATS Streaming service name
  serviceName: {{ template "stan.name" . }}

  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.exporter.enabled }}
      annotations:
      {{- if .Values.exporter.enabled }}
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
      {{- end }}
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        tier: astronomer
        app: {{ template "stan.name" . }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      {{- if .Values.stan.nats.serviceRoleAuth.enabled }}
      serviceAccountName: "nats-streaming"
      {{- end }}
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 90
{{- with .Values.affinity }}
      affinity:
{{- toYaml  . | nindent 8 }}
{{- end }}
      volumes:
      - configMap:
          name: {{ template "stan.name".  }}-config
        name: config-volume
      {{- if and .Values.stan.tls.enabled .Values.stan.tls.secretName }}
      - name: stan-client-tls-volume
        secret:
          secretName: {{ .Values.stan.tls.secretName }}
      {{- end }}
      initContainers:
        - name: wait-for-nats-server
          command:
            - "dockerize"
          args:
            - "-wait"
            - "tcp://{{ .Release.Name }}-nats:4222"
            - "-timeout"
            - "1m"
          image: quay.io/astronomer/ap-base:3.12-1
          imagePullPolicy: IfNotPresent
          env:
            - name: NATS__URL
              value: "nats://{{ .Release.Name }}-nats:4222"
      containers:
        - name: stan
          image: {{ .Values.stan.image }}
          args:
          - -sc
          - /etc/stan-config/stan.conf
          resources:
{{ toYaml .Values.stan.resources | indent 12 }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.stan.nats.serviceRoleAuth.enabled }}
          - name: NATS_OPERATOR_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: NATS_OPERATOR_BOUND_TOKEN
            valueFrom:
              secretKeyRef:
                name: nats-streaming-{{ .Values.stan.nats.serviceRoleAuth.natsClusterName }}-bound-token
                key: token
          - name: NATS_SERVICE
            value: {{ .Values.stan.nats.url }}
          - name: NATS_URL
            value: nats://$(NATS_OPERATOR_SERVICE_ACCOUNT):$(NATS_OPERATOR_BOUND_TOKEN)@$(NATS_SERVICE)
          {{- end }}
          livenessProbe:
            httpGet:
              path: /streaming/serverz
              port: monitor
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /streaming/serverz
              port: monitor
            initialDelaySeconds: 10
            timeoutSeconds: 5
          ports:
          - containerPort: 8222
            name: monitor
          - containerPort: 7777
            name: metrics
          volumeMounts:
          - name: config-volume
            mountPath: /etc/stan-config
          {{- if eq .Values.store.type "file" }}
          {{- if .Values.store.volume.enabled }}
          - name: {{ template "stan.name" . }}-pvc
            mountPath: {{ .Values.store.volume.mount }}
          {{- end }}
          {{- end }}
          {{- if and .Values.stan.tls.enabled .Values.stan.tls.secretName }}
          - name: stan-client-tls-volume
            mountPath: /etc/nats/certs
          {{- end }}
        {{ if .Values.exporter.enabled }}
        - name: metrics
          image: {{ .Values.exporter.image }}
          resources:
{{ toYaml .Values.exporter.resources | indent 12 }}
          args:
          - -connz
          - -routez
          - -subz
          - -varz
          - -channelz
          - -serverz
          - http://localhost:8222/
          ports:
          - containerPort: 7777
            name: metrics
        {{ end }}
  {{- if eq .Values.store.type "file" }}
  {{- if .Values.store.volume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "stan.name" . }}-pvc
    spec:
      {{- with .Values.store.volume.storageClass }}
      storageClassName: {{ . }}
      {{- end }}
      accessModes:
      {{- with .Values.store.volume.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.store.volume.storageSize }}
  {{- end }}
  {{- end }}
