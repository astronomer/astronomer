######################
## STAN Statefulset ##
######################
{{- if not .Values.global.nats.jetStream.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "stan.name" . }}
  labels:
    app: {{ template "stan.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  {{ if .Values.global.enableArgoCDAnnotation }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  {{- end }}
spec:
  {{- if and .Values.store.volume.enabled  .Values.persistence.persistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy: {{- toYaml .Values.persistence.persistentVolumeClaimRetentionPolicy | nindent 4 }}
  {{ end }}
  selector:
    matchLabels:
      app: {{ template "stan.name" . }}

  replicas: {{ include "stan.replicaCount" . | required ".Values.stan.replicas should be greater or equal to 3 in clustered mode" }}

  # NATS Streaming service name
  serviceName: {{ template "stan.name" . }}

  template:
    metadata:
      {{- if or .Values.global.podAnnotations .Values.podAnnotations }}
      annotations:
      {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | indent 8 }}
      {{- end }}
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        tier: astronomer
        app: {{ template "stan.name" . }}
        version: {{ .Chart.Version }}
        release: {{ .Release.Name }}
        component: stan
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        {{- include "global.podLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "stan.serviceAccountName" . }}
{{- include "stan.imagePullSecrets" . | indent 6 }}
{{- if eq .Values.global.openshiftEnabled false }}
      securityContext: {{ toYaml .Values.podSecurityContext| nindent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 90
      nodeSelector: {{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | nindent 8 }}
      affinity: {{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | nindent 8 }}
      tolerations: {{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | nindent 8 }}
      volumes:
      - configMap:
          name: {{ template "stan.name".  }}-config
        name: config-volume
      {{- if and .Values.stan.tls.enabled .Values.stan.tls.secretName }}
      - name: stan-client-tls-volume
        secret:
          secretName: {{ .Values.stan.tls.secretName }}
      {{- end }}
      initContainers:
        - name: wait-for-nats-server
          securityContext: {{toYaml .Values.securityContext | nindent 12 }}
          command:
            - "dockerize"
          args:
            - "-wait"
            - "tcp://{{ .Release.Name }}-nats:4222"
            - "-timeout"
            - "1m"
          image: {{ include "stan.init.image" . }}
          imagePullPolicy: {{ .Values.images.init.pullPolicy }}
          env:
            - name: NATS__URL
              value: "nats://{{ .Release.Name }}-nats:4222"
          resources: {{ toYaml .Values.init.resources | nindent 12 }}
      containers:
        - name: stan
          image: {{ include "stan.image" . }}
          securityContext: {{toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.images.stan.pullPolicy }}
          args:
          - -sc
          - /etc/stan-config/stan.conf
          resources: {{ toYaml .Values.stan.resources | nindent 12 }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.stan.nats.serviceRoleAuth.enabled }}
          - name: NATS_OPERATOR_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: NATS_OPERATOR_BOUND_TOKEN
            valueFrom:
              secretKeyRef:
                name: nats-streaming-{{ .Values.stan.nats.serviceRoleAuth.natsClusterName }}-bound-token
                key: token
          - name: NATS_SERVICE
            value: {{ .Values.stan.nats.url }}
          - name: NATS_URL
            value: nats://$(NATS_OPERATOR_SERVICE_ACCOUNT):$(NATS_OPERATOR_BOUND_TOKEN)@$(NATS_SERVICE)
          {{- end }}
          {{ if .Values.stan.nats.livenessProbe }}
          livenessProbe: {{ tpl (toYaml .Values.stan.nats.livenessProbe) . | nindent 12 }}
          {{ else }}
          livenessProbe:
            httpGet:
              path: /streaming/serverz
              port: monitor
            initialDelaySeconds: 10
            timeoutSeconds: 5
          {{- end }}
          {{ if .Values.stan.nats.readinessProbe }}
          readinessProbe: {{ tpl (toYaml .Values.stan.nats.readinessProbe) . | nindent 12 }}
          {{ else }}
          readinessProbe:
            httpGet:
              path: /streaming/serverz
              port: monitor
            initialDelaySeconds: 10
            timeoutSeconds: 5
          {{- end }}
          ports:
          - containerPort: 8222
            name: monitor
          volumeMounts:
          - name: config-volume
            mountPath: /etc/stan-config
          {{- if eq .Values.store.type "file" }}
          {{- if .Values.store.volume.enabled }}
          - name: {{ template "stan.name" . }}-pvc
            mountPath: {{ .Values.store.volume.mount }}
          {{- end }}
          {{- end }}
          {{- if and .Values.stan.tls.enabled .Values.stan.tls.secretName }}
          - name: stan-client-tls-volume
            mountPath: /etc/nats/certs
          {{- end }}
  {{- if eq .Values.store.type "file" }}
  {{- if .Values.store.volume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "stan.name" . }}-pvc
      {{- if .Values.persistence.annotations }}
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 10 }}
      {{- end }}
    spec:
      accessModes:
      {{- with .Values.store.volume.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.store.volume.storageSize }}
      {{ include "stan.storageClass" . }}
  {{- end }}
  {{- end }}
{{- end }}
