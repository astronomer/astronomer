#################################
## Elasticsearch Proxy Deployment
#################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "external-es-proxy.fullname" . }}
  labels:
    tier: external-logging
    component: {{ template "external-es-proxy.name" . }}
    chart: {{ template "external-es-proxy.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      tier: external-logging
      component: {{ template "external-es-proxy.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        tier: external-logging
        component: {{ template "external-es-proxy.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/nginx-config: {{ include (print $.Template.BasePath "/external-es-proxy-configmap.yaml") . | sha256sum }}
        checksum/lua-config: {{ include (print $.Template.BasePath "/external-es-proxy-env-configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "external-es-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.esproxy.repository }}:{{ .Values.images.esproxy.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.esproxy.pullPolicy }}
          env:
{{- if .Values.global.custom_logging.secret }}
          - name: ES_SECRET
            value: {{.Values.global.custom_logging.secret }}
{{- else if .Values.global.custom_logging.secretName }}
          - name: ES_SECRET_NAME
            valueFrom:
              secretKeyRef:
                name: {{.Values.global.custom_logging.secretName }}
                key: elastic
{{- end }}
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
            - name: nginx-env-volume
              mountPath: /usr/local/openresty/nginx/conf/setenv.lua
              subPath: setenv.lua

            {{- if .Values.global.custom_logging.trustCaCerts  -}}
            {{ $secretName := .Values.global.custom_logging.trustCaCerts  }}
            - name: trust-ca-certs
              mountPath: /etc/ssl/certs/{{ $secretName }}.pem
              subPath: {{ $secretName }}.pem
            {{- end}}
          ports:
            - name: secure-http
              containerPort: {{ .Values.service.securehttp }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.service.http }}
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.global.custom_logging.awsSecretName }}
        - name: awsproxy
          image: "{{ .Values.images.awsproxy.repository }}:{{ .Values.images.awsproxy.tag | default .Chart.AppVersion }}"
          command: ["/bin/sh","-c"]
          args: ["aws-es-proxy -listen :{{ .Values.service.awsproxy }}"]
          imagePullPolicy: {{ .Values.images.awsproxy.pullPolicy }}
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{.Values.global.custom_logging.awsSecretName }}
                key: aws_access_key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{.Values.global.custom_logging.awsSecretName }}
                key: aws_secret_key
          - name: ENDPOINT
            value: "{{.Values.global.custom_logging.scheme}}://{{.Values.global.custom_logging.host}}"
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-config-volume
          configMap:
            name: {{ .Release.Name }}-{{ template "external-es-proxy.name" . }}
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-env-volume
          configMap:
            name: {{ .Release.Name }}-{{ template "external-es-proxy.name" . }}-setenv
            items:
              - key: setenv.lua
                path: setenv.lua
        {{- if .Values.global.custom_logging.trustCaCerts  -}}
        {{ $secretName := .Values.global.custom_logging.trustCaCerts  }}
        - name: trust-ca-certs
          secret:
            secretName: {{ $secretName }}
        {{- end}}
        {{- if .Values.global.custom_logging.awsSecretName }}
        - name: awssecret
          secret:
            secretName: {{ .Values.global.custom_logging.awsSecretName }}
        {{- end}}
