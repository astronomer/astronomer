#####################
## Airflow Operator ##
#####################
{{- if .Values.global.operator.enabled }}
apiVersion: airflow.apache.org/v1beta1
kind: Airflow
metadata:
  name: exact-instrument-4180
spec:
  runtimeVersion: 4.0.2
  imagePullSecret: astrohub-image-pull-secret-v1 
  image: quay.io/astronomer/astro-runtime:4.0.2
  executor: CeleryExecutor
  env: []
  scheduler:
    replicas: 1
    podAnnotations:
      splunk.com/index: dev-schedulers
    podTemplateSpec:
      spec:
        containers:
        - name: scheduler
          resources: {} # resource spec for scheduler  and also  this will come as UI input or api 
  webserver: # will go as hardcoded value from houston config/default.yaml
    webserverConfig: |
      import os
      from airflow import configuration as conf
      from flask_appbuilder.security.manager import AUTH_REMOTE_USER
      basedir = os.path.abspath(os.path.dirname(__file__))

      # The SQLAlchemy connection string.
      SQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')

      # Flask-WTF flag for CSRF
      CSRF_ENABLED = True

      # ----------------------------------------------------
      # AUTHENTICATION CONFIG
      # ----------------------------------------------------

      AUTH_TYPE = AUTH_REMOTE_USER

      from astronomer.flask_appbuilder.security import AirflowAstroSecurityManager
      SECURITY_MANAGER_CLASS = AirflowAstroSecurityManager

    createDefaultUser: false
    ingress:
      host: deployments.basedomain
      path: "/release-name/airflow"
      tlsSecretName: astronomer-tls
      annotations:
        common-annotation
        webserver-annotation
    podTemplateSpec:
      spec:
        containers:
        - name: webserver
          resources: {} # resource spec for
  workers:
  - podTemplateSpec:
      spec:
        containers:
        - name: worker
          resources: {} # resource spec for worker and also  this will come as UI input or api 
        terminationGracePeriodSeconds: 600 # this will come as UI input or api 
  secrets:
    metadataSecretName: metadata-connection # for db secrets we will be calling commander setSecret 
    resultBackendSecretName: result-backend-connection # for db secrets we will be calling commander setSecret 
  useDefaultWorker: false
  serviceAccountAnnotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::726093857670:role/AirflowS3Logs-ckt3779dp00000rvx94xucbx7 # for iam roles 
  logging:
    s3:
      enabled: true