##########################################
## Db migration Pre install/update Hook ##
##########################################
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-houston-db-migrations
  labels:
    tier: astronomer
    component: houston-db-migrations
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade,post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        tier: astronomer
        component: houston-db-migrations
        release: {{ .Release.Name }}
      {{- if .Values.global.istio.enabled }}
      annotations:
        sidecar.istio.io/inject: "false"
      {{- end }}
    spec:
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      affinity:
{{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      restartPolicy: Never
      {{- if and (not .Values.houston.airflowBackendSecretName) (not .Values.houston.airflowBackendConnection) }}
      serviceAccountName: {{ template "houston.bootstrapperServiceAccount" . }}
      initContainers:
        - name: wait-for-db
          image: {{ template "houston.image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          command:
            - "/houston/bin/entrypoint"
          args:
            - "echo"
            - "DB ready"
          resources:
{{ toYaml .Values.houston.resources | indent 12 }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
            {{- include "houston_environment" . | indent 12 }}
        - name: houston-bootstrapper
          image: {{ template "dbBootstrapper.image" . }}
          imagePullPolicy: {{ .Values.images.dbBootstrapper.pullPolicy }}
          env:
            - name: BOOTSTRAP_DB
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
            # we need to hardcode it to be able to upgrade from prisma1 to prisma2
            - name: SCHEMA_NAME
              value: "houston$default"
            {{ if .Values.global.sslmodeEnabled }}
            - name: SSLMODE
              value: "require"
            {{- end }}
            - name: DB_NAME
              value: {{ .Release.Name }}-houston
            - name: SECRET_NAME
              value: {{ template "houston.airflowBackendSecret" . }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: IN_CLUSTER
              value: "true"
      {{- end }}
      containers:
        - name: houston-db-migrations-job
          image: {{ template "houston.image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          # If you supply only args for a Container, the default Entrypoint defined in the Docker image is run with the args that you supplied.
          args: ["yarn", "migrate"]
          volumeMounts:
          {{- include "houston_volume_mounts" . | indent 12 }}
          {{- include "custom_ca_volume_mounts" . | indent 12 }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "houston.backendSecret" . }}
                  key: connection
            {{- include "houston_environment" . | indent 12 }}
      volumes:
        {{- include "houston_volumes" . | indent 8 }}
        {{- include "custom_ca_volumes" . | indent 8 }}
