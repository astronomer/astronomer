###################################
## Astronomer Houston Deployment ##
###################################
{{- if or (eq .Values.global.plane.mode "control") (eq .Values.global.plane.mode "unified") }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-houston
  labels:
    component: houston
    tier: astronomer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    plane: {{ .Values.global.plane.mode }}
spec:
  replicas: {{ .Values.houston.replicas }}
  selector:
    matchLabels:
      tier: astronomer
      component: houston
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: astronomer
        component: houston
        release: {{ .Release.Name }}
        app: houston
        version: {{ .Chart.Version }}
        plane: {{ .Values.global.plane.mode }}
        {{- include "global.podLabels" . | nindent 8 }}
      annotations:
        checksum/houston-config: {{ include (print $.Template.BasePath "/houston/houston-configmap.yaml") . | sha256sum }}
        checksum/houston-backend-secret: {{ include (print $.Template.BasePath "/houston/api/houston-backend-secret.yaml") . | sha256sum }}
        {{- if and .Values.global.nats.jetStream.enabled .Values.global.nats.jetStream.tls }}
        {{- $jetStreamTLSSecretName := printf "%s-client" (include "nats.jestreamTLSSecret" . ) }}
        {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $jetStreamTLSSecretName) | default dict }}
        {{- $secretData := (get $secretObj "data") | default dict }}
        {{- if $secretData }}
        checksum/jetstream-tls-cert: {{ sha256sum (b64dec (get $secretData "tls.crt")) }}
        {{- end }}
        {{- end }}
        {{- if .Values.global.podAnnotations }}
        {{- toYaml .Values.global.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.houston.podAnnotations }}
        {{- toYaml .Values.houston.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      nodeSelector: {{- toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | nindent 8 }}
      affinity: {{- toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | nindent 8 }}
      tolerations: {{- toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | nindent 8 }}
      restartPolicy: Always
      serviceAccountName: {{ template "houston.bootstrapperServiceAccountName" . }}
      {{- if and (not .Values.houston.airflowBackendSecretName) (not .Values.houston.airflowBackendConnection) (not .Values.houston.backendSecretName) (not .Values.houston.backendConnection) }}
      initContainers:
        - name: etc-ssl-certs-copier
          command:
            - sh
            - -c
            - |
              if [ -d /etc/ssl/certs ]; then
                cp -r /etc/ssl/certs/* /etc/ssl/certs_copy/
              else
                echo "No /etc/ssl/certs directory found, skipping copy."
              fi
          volumeMounts:
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs_copy
          image: {{ template "houston.image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            {{- toYaml .Values.securityContext| nindent 12 }}
          resources: {{- toYaml .Values.houston.resources | nindent 12 }}
        - name: wait-for-db
          image: {{ template "houston.image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            {{- toYaml .Values.securityContext| nindent 12 }}
          command:
            - "/houston/bin/entrypoint"
          args:
            - "echo"
            - "DB ready"
          resources: {{- toYaml .Values.houston.resources | nindent 12 }}
          {{- if .Values.houston.waitForDB.readinessProbe }}
          readinessProbe: {{- tpl (toYaml .Values.houston.waitForDB.readinessProbe) . | nindent 12 }}
          {{- end }}
          {{- if .Values.houston.waitForDB.livenessProbe }}
          livenessProbe: {{ tpl (toYaml .Values.houston.waitForDB.livenessProbe) . | nindent 12 }}
          {{- end }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
           {{- include "houston_environment" . | indent 12 }}
          volumeMounts:
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs
        - name: houston-bootstrapper
          image: {{ template "dbBootstrapper.image" . }}
          securityContext:
            readOnlyRootFilesystem: true
            {{- toYaml .Values.securityContext| nindent 12 }}
          imagePullPolicy: {{ .Values.images.dbBootstrapper.pullPolicy }}
          resources: {{- toYaml .Values.houston.resources | nindent 12 }}
          {{- if .Values.houston.bootstrapper.readinessProbe }}
          readinessProbe: {{- tpl (toYaml .Values.houston.bootstrapper.readinessProbe) . | nindent 12 }}
          {{- end }}
          {{- if .Values.houston.bootstrapper.livenessProbe }}
          livenessProbe: {{- tpl (toYaml .Values.houston.bootstrapper.livenessProbe) . | nindent 12 }}
          {{- end }}
          env:
            - name: BOOTSTRAP_DB
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
            - name: SCHEMA_NAME
              value: "houston$default"
            {{- if .Values.global.ssl.enabled }}
            - name: SSLMODE
              value: {{ .Values.global.ssl.mode }}
            {{- end }}
            {{- if .Values.houston.prismaConnectionLimit }}
            # Connection Limit for Prisma Connection Pool: https://www.prisma.io/docs/concepts/components/prisma-client/deployment#database-connection-limit
            - name: PRISMA_CONNECTION_LIMIT
              value: {{ .Values.houston.prismaConnectionLimit | quote }}
            {{- end }}
            - name: DB_NAME
              value: {{ .Release.Name }}-houston
            - name: SECRET_NAME
              value: {{ template "houston.airflowBackendSecret" . }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: IN_CLUSTER
              value: "true"
          volumeMounts:
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs
            - name: tmp
              mountPath: /tmp
            - name: tmp
              mountPath: /houston/node_modules/.cache
      {{- end }}
      {{- include "astronomer.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: houston
          image: {{ template "houston.image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            {{- toYaml .Values.securityContext| nindent 12 }}
          resources: {{- toYaml .Values.houston.resources | nindent 12 }}
          volumeMounts:
            - name: etc-ssl-certs
              mountPath: /etc/ssl/certs
            - name: tmp
              mountPath: /tmp
            - name: tmp
              mountPath: /houston/node_modules/.cache
            {{- include "houston_volume_mounts" . | indent 12 }}
            {{- include "custom_ca_volume_mounts" . | indent 12 }}
            {{- if .Values.houston.volumeMounts }}
            {{- tpl (toYaml .Values.houston.volumeMounts) $ | nindent 12 }}
            {{- end }}
          ports:
            - name: houston-http
              containerPort: {{ .Values.ports.houstonHTTP }}
          {{- if .Values.houston.livenessProbe }}
          livenessProbe: {{ tpl (toYaml .Values.houston.livenessProbe) $ | nindent 12 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: /v1/healthz
              port: {{ .Values.ports.houstonHTTP }}
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 10
          {{- end }}
          {{- if .Values.houston.readinessProbe }}
          readinessProbe: {{- tpl (toYaml .Values.houston.readinessProbe) $ | nindent 12 }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: /v1/healthz
              port: {{ .Values.ports.houstonHTTP }}
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 10
          {{- end }}
          {{- if .Values.houston.command }}
          command: {{- toYaml .Values.houston.command | nindent 12 }}
          {{- end }}
          {{- if .Values.houston.apiArgs }}
          args: {{- toYaml .Values.houston.apiArgs | nindent 12 }}
          {{- end }}
          env:
            {{- include "houston_environment" . | indent 12 }}
            - name: GRPC_VERBOSITY
              value: "INFO"
            - name: GRPC_TRACE
              value: "all"
            - name: APOLLO_SERVER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APOLLO_SERVER_USER_VERSION
              value: {{ template "houston.image" . }}
            - name: APOLLO_SERVER_PLATFORM
              value: "kubernetes/deployment"
            - name: REGISTRY__AUTH_HEADER
              valueFrom:
                secretKeyRef:
                  name: {{ template "registry.authHeaderSecret" . }}
                  key: token
          {{- if .Values.houston.extraContainers }}
          {{- tpl (toYaml .Values.houston.extraContainers) $ | nindent 8 }}
          {{- end }}
      volumes:
        - name: etc-ssl-certs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      {{- if .Values.houston.extraVolumes }}
      {{- tpl (toYaml .Values.houston.extraVolumes) $ | nindent 8 }}
      {{- end }}
              {{- include "houston_volumes" . | nindent 8 }}
              {{- include "custom_ca_volumes" . | indent 8 }}
      {{- end }}
