################################
## Astronomer Commander RoleBinding
#################################
# Either:
# 1. Do not create anything is rbacEnabled is disabled
# 2. Create ClusterRoleBinding if clusterRoles enabled and namespacePools disabled
# 3. Create RoleBinding for each namespace in the namespacePool if enabled
{{- $useClusterRoles := and .Values.global.rbacEnabled .Values.global.clusterRoles (not .Values.global.features.namespacePools.enabled)}}
{{- $shouldCreateResources := and .Values.global.rbacEnabled (or .Values.global.clusterRoles .Values.global.features.namespacePools.enabled) }}
{{- $namespaces := .Values.global.features.namespacePools.namespaces.names }}
{{ if $useClusterRoles }}
  {{- $namespaces = list .Release.Namespace}}
{{ end }}

{{- if $shouldCreateResources }}
{{- range $i, $namespaceName := $namespaces -}}
---
apiVersion: {{ template "apiVersion.rbac" . }}
kind: {{ if $useClusterRoles }}ClusterRoleBinding{{ else }}RoleBinding{{ end }}
metadata:
  name: {{ $.Release.Name }}-commander
  {{- if not $useClusterRoles }}
  namespace: {{ $namespaceName }}
  {{- end }}
  {{- if $.Values.global.enableArgoCDAnnotation }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ if $useClusterRoles }}ClusterRole{{ else }}Role{{ end }}
  name: {{ $.Release.Name }}-commander
subjects:
  - kind: ServiceAccount
    name: {{ $.Release.Name }}-commander
    namespace: {{ $.Release.Namespace }}
{{ end }}
{{- end }}
