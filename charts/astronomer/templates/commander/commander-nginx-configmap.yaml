###############################
## Commander Nginx Configmap ##
###############################
{{- if and .Values.global.authSidecar.enabled (eq .Values.global.plane.mode "data") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-commander-nginx-conf
  labels:
    component: commander-nginx-conf
    tier: astronomer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    plane: {{ .Values.global.plane.mode }}
  {{ if .Values.global.enableArgoCDAnnotation }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  {{- end }}
data:
  nginx.conf: |
    # Run nginx as non-root user for OpenShift
    pid /tmp/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        # Temporary directories that are writable by non-root user
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        # Basic HTTP settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Upstream for HTTP metadata endpoint
        upstream commander-http {
            server 127.0.0.1:{{ .Values.ports.commanderHTTP }};
        }

        # Upstream for GRPC endpoint
        upstream commander-grpc {
            server 127.0.0.1:{{ .Values.ports.commanderGRPC }};
        }

        # HTTP server for metadata endpoint
        server {
            listen {{ .Values.ports.commanderSidecarHTTP }};

            # Health check endpoint
            location /nginx-health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location /metadata {
                proxy_pass http://commander-http;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffer_size 16k;
                proxy_buffers 4 16k;
                proxy_busy_buffers_size 16k;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
        }

        # GRPC server with HTTP/2 support
        server {
            listen {{ .Values.ports.commanderSidecarGRPC }};
            http2 on;

            location / {
                grpc_pass grpc://commander-grpc;
                grpc_set_header Host $host;
                grpc_set_header X-Real-IP $remote_addr;
                grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                grpc_set_header X-Forwarded-Proto $scheme;

                # GRPC timeouts
                grpc_read_timeout 300s;
                grpc_send_timeout 300s;
                client_body_timeout 300s;

                # Buffer settings for GRPC
                grpc_buffer_size 16k;
            }
        }
    }
{{- end }}
