{{- if and .Values.global.authSidecar.enabled (eq .Values.global.plane.mode "data") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-commander-nginx-conf
  labels:
    component: commander-nginx-conf
    tier: astronomer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    plane: {{ .Values.global.plane.mode }}
  {{ if .Values.global.enableArgoCDAnnotation }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  {{- end }}
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        # Upstream for HTTP metadata endpoint
        upstream commander_http {
            server 127.0.0.1:8880;
        }
        
        # HTTP server for metadata endpoint
        server {
            listen 80;
            
            location /metadata {
                proxy_pass http://commander_http;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffer_size 16k;
                proxy_buffers 4 16k;
                proxy_busy_buffers_size 16k;
            }
            
            # Health check endpoint
            location /nginx-health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
    
    stream {
        # Upstream for GRPC endpoint
        upstream commander_grpc {
            server 127.0.0.1:50051;
        }
        
        # GRPC stream server
        server {
            listen 50051;
            proxy_pass commander_grpc;
            proxy_timeout 1s;
            proxy_responses 1;
            proxy_bind $remote_addr transparent;
        }
    }
{{- end }}