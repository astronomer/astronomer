# Default values for astronomer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nodeSelector: {}
affinity: {}
tolerations: []

# Images for Astronomer
images:
  commander:
    repository: astronomerinc/ap-commander
    tag: 0.11.0
    pullPolicy: IfNotPresent
  registry:
    repository: astronomerinc/ap-registry
    tag: 0.11.0
    pullPolicy: IfNotPresent
  houston:
    repository: astronomerinc/ap-houston-api
    tag: 0.12.2
    pullPolicy: IfNotPresent
  astroUI:
    repository: astronomerinc/ap-astro-ui
    tag: 0.12.4
    pullPolicy: IfNotPresent
  dbBootstrapper:
    repository: astronomerinc/ap-db-bootstrapper
    tag: 0.11.0
    pullPolicy: IfNotPresent
  cliInstall:
    repository: astronomerinc/ap-cli-install
    tag: 0.11.0
    pullPolicy: IfNotPresent
  prisma:
    repository: astronomerinc/ap-prisma
    tag: 0.11.1
    pullPolicy: IfNotPresent
  e2eTest:
    repository: astronomerinc/ap-e2e-test
    tag: 0.0.7
    pullPolicy: IfNotPresent

astroUI:
  env: []
  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

houston:
  replicas: 1
  # Houston datastore
  backendSecretName: ~
  backendConnection: {}
    # user: ~
    # pass: ~
    # host: ~
    # port: ~
    # db: ~
  # Airflow backends
  airflowBackendSecretName: ~
  airflowBackendConnection: {}
    # user: ~
    # pass: ~
    # host: ~
    # port: ~
    # db: ~

  # This specifies an optional secret name to use to sign JWTs.
  # If not specified, we use an auto-generated, self-signed certificate.
  jwtSigningKeySecretName: ~
  jwtSigningCertificateSecretName: ~

  env: []

  # For example
  #   `kubectl create secret generic my-secret --from-literal=connection=smtps://USERNAME:PW@HOST/?pool=true`
  # and then set:
  #
  # secret:
  # - envName: "EMAIL__SMTP_URL"
  #   secretName: "my-scret"
  #   secretKey: "connection"
  secret: []

  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

  # Any Houston configuration. Reference here:
  # https://github.com/astronomer/houston-api/blob/master/config/default.yaml
  config: {}

  # Automatically upgrade Airflow deployments to the latest
  # version specified by Houston configuration.
  # This runs as a Job after helm upgrades.
  upgradeDeployments:
    # Enable this helm hook on upgrade
    enabled: true

    # Only run on deployments marked as canary
    canary: false

  # Expire deployments that have gone past trial date in Houston
  # This runs as a CronJob
  expireDeployments:
    # Enable expire deployments CronJob
    enabled: false

    # Default here is to run at midnight every night
    schedule: "0 0 * * *"

    # Print out the deployments that should be expired and skip actual deletion
    dryRun: false

    # Only run on deployments marked as canary
    canary: false

  # Cleanup deployments that have been soft-deleted in Houston
  # This runs as a CronJob
  cleanupDeployments:
    # Enable cleanup CronJob
    enabled: true

    # Default here is to run at midnight every night
    schedule: "0 0 * * *"

    # Cleanup deployments older than this many days
    olderThan: 14

    # Print out the deployments that should be cleaned up and skip actual cleanup
    dryRun: false

    # Only run on deployments marked as canary
    canary: false

  # Check for Astronomer Platform Updates
  # This runs as a CronJob
  updateCheck:
    # Enable check updates CronJob
    enabled: true

    # url for update service
    url: https://updates.astronomer.io/astronomer-platform

    # Default here is to run at midnight every night
    schedule: "0 0 * * *"

prisma:
  env: []
  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi


commander:
  replicas: 1
  env: []
  resources: {}
   # limits:
   #  cpu: 100m
   #  memory: 128Mi
   # requests:
   #  cpu: 100m
   #  memory: 128Mi

registry:
  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

  persistence:
    # Enable persistent storage
    enabled: true
    # Size of volume to provision
    size: 100Gi
    # If using a custom storageClass, pass name ref to all statefulSets here
    storageClassName: ~

  auth:
    secretName: ~
    connection: ~
    service: "docker-registry"
    issuer: "houston"

  gcs:
    enabled: false
    bucket: ~
    keyfile: /var/gcs-keyfile/astronomer-gcs-keyfile
    rootdirectory: /
    chunksize: '5242880'

  azure:
    enabled: false
    accountname: ~
    accountkey: ~
    container: ~
    realm: ~

install:
  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

e2eTest:
  env: []
  resources: {}

ports:
  houstonHTTP: 8871
  commanderHTTP: 8880
  commanderGRPC: 50051
  astroUIHTTP: 8080
  registryHTTP: 5000
  registryScrape: 5001
  installHTTP: 80
  prismaHTTP: 4466
