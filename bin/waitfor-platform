#!/usr/bin/env bash
set -euo pipefail

# Bit of common bash magic that sets DIR to the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $DIR/helpers.sh

# The path to the working directory - the root of the repo
REPO_DIR=$DIR/../

set +ex

START=$(date +%s)

# Wait for Astronomer to deploy
RC=0
HELM_CODE=0
MAX_SECONDS=800
while [ $RC -eq 0 ]; do
  NOW=$(date +%s)
  DURATION="$(($NOW-$START))"
  echo "${DURATION} seconds have elapsed, timeout at $MAX_SECONDS seconds"
  if [ $DURATION -gt $MAX_SECONDS ];then
    HELM_CODE=1
    RC=1
    echo "Error (timeout): giving up after $MAX_SECONDS seconds"
  else
    sleep 10
    kubectl get pods -n astronomer > /tmp/pods
    if [ ! $? -eq 0 ];then
      echo "kubectl get pods timed out. retrying."
      continue
    fi
    # Ignore elasticsearch-nginx in order to allow for testing the deployment
    # of logging tag without the platform. This is the only logging component
    # that will not start without the platform. The benefit of allowing us to
    # test the logging tag outweighs the downside of ignoring one pod.
    cat /tmp/pods | grep -v 1/1 | grep -v 2/2 | grep -v NAME | grep -v Completed | grep -v 'elasticsearch-nginx' >/dev/null 2>&1
    RC=$?
  fi
done

# Output debugging information
if [ $HELM_CODE -eq 0 ]; then
  echo "Astronomer deployed!"
else
  get_debugging_info
fi

set -x
kubectl get pods --all-namespaces
helm list

exit $HELM_CODE
