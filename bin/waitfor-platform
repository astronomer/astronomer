#!/usr/bin/env bash
# shellcheck disable=SC1091
set -euo pipefail

# The path to the working directory - the root of the repo
GIT_ROOT="$(git -C "${0%/*}" rev-parse --show-toplevel)"
source "$GIT_ROOT/bin/helpers.sh"

set +ex

START=$(date +%s)

# Wait for Astronomer to deploy
HELM_CODE=0
MAX_SECONDS=800
kubectl get pods --all-namespaces -w &
while [ "${RC:-0}" -eq 0 ]; do
  NOW=$(date +%s)
  DURATION="$(( NOW - START ))"
  echo "${DURATION} seconds have elapsed, timeout at $MAX_SECONDS seconds"
  if [ $DURATION -gt $MAX_SECONDS ];then
    HELM_CODE=1
    RC=1
    echo "Error (timeout): giving up after $MAX_SECONDS seconds"
  else
    sleep 10
    if ! kubectl get pods --all-namespaces > /tmp/pods
    then
      echo "kubectl get pods timed out. retrying."
      continue
    fi
    # Ignore elasticsearch-nginx in order to allow for testing the deployment
    # of logging tag without the platform. This is the only logging component
    # that will not start without the platform. The benefit of allowing us to
    # test the logging tag outweighs the downside of ignoring one pod.
    #
    # Also ignore kibana-default-index because it leaves behind failed pods if
    # it doesn't succeed on the first try, which falsely make it seem like the
    # job failed. https://github.com/astronomer/issues/issues/6158
    grep -vE 'NAME|Completed|elasticsearch-nginx|kibana-default-index| ([0-9]+)/\1 ' /tmp/pods
    RC=$?
  fi
done

kill %1

# Output debugging information
if [ "$HELM_CODE" -eq 0 ]; then
  echo "pods are all ready!"
else
  get_debugging_info
fi

set -x
kubectl get pods --all-namespaces
helm list -A

exit "$HELM_CODE"
