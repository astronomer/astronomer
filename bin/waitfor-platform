#!/usr/bin/env bash
# This contents of this file must be compatible with CI and local dev workflows
set -euo pipefail

# shellcheck disable=SC1090
source "${0%/*}/helpers.sh"

# The path to the working directory - the root of the repo

set +ex

START=$(date +%s)

# Wait for Astronomer to deploy
return_code=0
timed_out=0
MAX_SECONDS=800
while [ $return_code -eq 0 ]; do
  NOW=$(date +%s)
  DURATION="$(( NOW - START ))"
  echo "${DURATION} seconds have elapsed, timeout at $MAX_SECONDS seconds"
  if [ $DURATION -gt $MAX_SECONDS ];then
    timed_out=1
    return_code=1
    echo "Error (timeout): giving up after $MAX_SECONDS seconds"
  else
    sleep 10
    if ! kubectl get pods -n astronomer > /tmp/pods ; then
      echo "kubectl get pods timed out. retrying."
      continue
    fi
    # Ignore elasticsearch-nginx in order to allow for testing the deployment
    # of logging tag without the platform. This is the only logging component
    # that will not start without the platform. The benefit of allowing us to
    # test the logging tag outweighs the downside of ignoring one pod.
    grep -vE '1/1|2/2|NAME|Completed|elasticsearch-nginx' /tmp/pods >/dev/null 2>&1
    return_code=$?
  fi
done

# Output debugging information
if [ $timed_out -eq 0 ]; then
  echo "Astronomer deployed!"
else
  get_debugging_info
fi

set -x
kubectl get pods --all-namespaces
helm list

exit $timed_out
