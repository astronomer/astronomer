#!/usr/bin/env bash
set -euo pipefail

# Bit of common bash magic that sets DIR to the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
# The path to the working directory - the root of the repo
REPO_DIR=$DIR/../

TESTING_VERSION="v0.0.1"

# get testing repo
ssh-agent bash -c 'ssh-add ~/.ssh/id_rsa_fbbd3c2fefafe95bfe330ee101809fcf; git clone git@github.com:astronomer/astro-testing.git'

# everything else happens from withing the testing repo
cd astro-testing

# Checkout the version we want
git checkout $TESTING_VERSION

# build testing tools container, this should be removed when private docker build/usage is available
docker build -t astro/testing .

# Setup cert trust, this will get mounted into the container
cat `mkcert -CAROOT`/rootCA.pem > root-ca.crt

# Setup .env file
cp env-example .env
echo "ASTRO_DOMAIN=local.astronomer-development.com" >> .env

# Run tests and capture exit code
set +e
./scripts/run-in-ci.sh
EC=$?
set -e

# Print debug info
kubectl get pods --all-namespaces
echo "TEST EXIT CODE: $EC"

# exit with same code as tests
exit $EC
