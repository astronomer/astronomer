---

- name: Set up variables
  set_fact:
    backup_dir: "/astronomer-backups"
    release_name: "astronomer"
    namespace: "default"
    timestamp: "{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}"
    db_hostname: "localhost"
    db_username: "postgres"
    db_password: "postgres"
    db_port: "5432"

- name: 'Check that release name and namespace are correctly configured (1/3): helm status'
  changed_when: false
  register: helm_status_raw
  shell: |
    helm status -o json --namespace {{ namespace }} {{ release_name }}

- name: 'Check that release name and namespace are correctly configured (2/3): parse json'
  set_fact:
    helm_status: "{{ helm_status_raw.stdout | from_json }}"

- name: 'Check that release name and namespace are correctly configured (3/3): assert contents look right'
  changed_when: false
  assert:
    that:
      - helm_status.name == release_name
      - helm_status.info.status == 'deployed'
      - helm_status.namespace == namespace

- name: 'Fetch Helm history from Astronomer (1/2): helm history'
  changed_when: false
  register: helm_history_raw
  shell: |
    helm history -o json --namespace {{ namespace }} {{ release_name }}

- name: 'Fetch Helm history from Astronomer (2/2): parse json'
  set_fact:
    # this will select only the current revision from the helm history
    helm_history: "{{ helm_history_raw.stdout | from_json | last }}"

- name: Assert helm revision looks right
  changed_when: false
  assert:
    that:
      - helm_history.status == "deployed"
      - "'0.16' in helm_history.app_version"
      - "'astronomer' in helm_history.chart"

- name: Show information about current Helm revision
  changed_when: false
  debug:
    msg:
      - "Helm chart is: {{ helm_history.chart }}"
      - "Current revision is: {{ helm_history.revision }}"
      - "Status is: {{ helm_history.status }}"

- name: 'Fetch Helm values from Astronomer (1/2): helm get values'
  register: helm_values_raw
  changed_when: false
  shell: |
    helm get values -o json --namespace {{ namespace }} {{ release_name }}

- name: 'Fetch Helm values from Astronomer (2/2): parse json'
  set_fact:
    helm_values: "{{ helm_values_raw.stdout | from_json }}"

- name: Ensure backup directory is created
  file:
    path: "{{ backup_dir }}"
    state: directory

- name: Create save directory
  register: astro_save_dir
  file:
    path: "{{ backup_dir }}/astro-save-{{ timestamp }}"
    state: directory

- name: Backup Astronomer Helm values
  copy:
    dest: "{{ astro_save_dir.path }}/helm-user-values.json"
    content: "{{ helm_values | to_json }}"

- name: Backup Astronomer revision
  copy:
    dest: "{{ astro_save_dir.path }}/helm-revision.json"
    content: "{{ helm_history | to_json }}"

- name: Backup Astronomer Helm status
  copy:
    dest: "{{ astro_save_dir.path }}/helm-status.json"
    content: "{{ helm_status | to_json }}"

- name: Ensure Houston API is deleted
  community.kubernetes.k8s:
    state: absent
    api_version: v1
    kind: Deployment
    namespace: "{{ namespace }}"
    name: "{{ release_name }}-houston"

- name: Ensure Prisma is deleted
  community.kubernetes.k8s:
    state: absent
    api_version: v1
    kind: Deployment
    namespace: "{{ namespace }}"
    name: "{{ release_name }}-prisma"

- name: Backup Astronomer database
  postgresql_db:
    login_host: "{{ db_hostname }}"
    login_user: "{{ db_username }}"
    login_password: "{{ db_password }}"
    name: "{{ release_name }}_houston"
    state: dump
    target: "{{ astro_save_dir.path }}/astronomer-db-backup.tar"
    target_opts: '--clean --create --format=tar'

- name: Run SQL for Prisma 1 to Prisma 2 migration
  postgresql_query:
    login_host: "{{ db_hostname }}"
    login_user: "{{ db_username }}"
    login_password: "{{ db_password }}"
    db: "{{ release_name }}_houston"
    path_to_script: "files/prisma1_to_prisma2.sql"

# The db migration container waits on NATs, and for that, we need the new pods.
# Also, there are new network security policies we need to apply before the db migration.
- name: "Upgrade Astronomer: Helm upgrade (1/2) swap out pods"
  shell: |
    helm upgrade --namespace {{ namespace }} --reset-values -f {{ astro_save_dir.path }}/helm-user-values.json --no-hooks --version=0.20.0 {{ release_name }} astronomer-internal/astronomer --cleanup-on-fail

- name: "Upgrade Astronomer: Helm upgrade (2/2) Run DB migration"
  shell: |
    helm upgrade --namespace {{ namespace }} --reset-values -f {{ astro_save_dir.path }}/helm-user-values.json --version=0.20.0 {{ release_name }} astronomer-internal/astronomer --cleanup-on-fail
