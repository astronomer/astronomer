#!/usr/bin/env bash
# Perform a CI test run. This must be functional in CircleCI and on a local dev workstation. (IE: does not delete any user settings.)
# Usage: run-ci [component ... component]
# Example: run-ci platform postgresql kubed keda
# shellcheck disable=SC1090
set -euo pipefail

REPO_DIR="$(git rev-parse --show-toplevel)"
BIN_DIR="${REPO_DIR}/bin"

"$REPO_DIR/bin/install-ci-tools"
export PATH="/tmp/bin:/tmp/google-cloud-sdk/bin/:$PATH"
find /tmp/bin /tmp/google-cloud-sdk/bin/ -maxdepth 1 -type f -print0 | xargs -0 ls -lh

"$BIN_DIR/setup-kind"

echo "Deploying Astronomer..."

# Lint the platform while helm can talk to Kubernetes
# make lint

# This is so CI does not timeout on "no input in 10 minutes"
kubectl get pods -n astronomer -w &
WATCH_PID=$!

"$BIN_DIR/install-platform" "$@"

sleep 5

"$BIN_DIR/waitfor-platform"

"$BIN_DIR/setup-hosts"

"$BIN_DIR/create-initial-user" "tester@astronomer.io" "password"

### Test Platform
"$BIN_DIR/test-ap"

# Test monitoring/alerting ingress - This is a stopgap until it can move in to full testing suite
echo "Testing alertmanager ingress"
curl -f -s -o /dev/null -H "Host: alertmanager.local.astronomer-development.com" http://127.0.0.1/
echo "Testing prometheus ingress"
curl -f -s -o /dev/null -H "Host: prometheus.local.astronomer-development.com" http://127.0.0.1/

sudo kill -9 $WATCH_PID
