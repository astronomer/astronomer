pipeline:
  # wait for clair db up and running
  wait-for-db:
    image: astronomerio/ap-build:0.1.2
    commands:
      - while ! nc -w 1 -z postgres 5432; do sleep 1; done

  # Start the Clair api locally
  clair-api:
    image: arminc/clair-local-scan
    detach: true
  ##################################
  ## Github pushes
  ###################################
  # Update VERSIONs in Dockerfiles to point at newly created git tags
  # Update platform Dockerfiles to point to extend ap-base image
  # Update airflow onbuild images to extend the corresponding base image
  # XXX: On pushes, docker tags are just set to 0.0.0
  update-tags:
    image: astronomerio/ap-build:0.1.2
    commands:
      - make update-platform-docker-tags
      - make update-airflow-onbuild-docker-tags
    environment:
      - ASTRONOMER_VERSION=0.0.0
    when:
      event: push
      branch: [ master, release-* ]

  build-platform:
    group: build
    image: astronomerio/ap-build:0.1.2
    commands:
      - make build-platform
    environment:
      - ASTRONOMER_VERSION=0.0.0
      - ASTRONOMER_REF=${DRONE_BRANCH}
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push
      branch: [ master, release-* ]

  build-airflow:
    group: build
    image: astronomerio/ap-build:0.1.2
    commands:
      - make build-airflow
    environment:
      - ASTRONOMER_VERSION=0.0.0
      - ASTRONOMER_REF=${DRONE_BRANCH}
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push
      branch: [ master, release-* ]

  push-platform:
    group: push
    image: astronomerio/ap-build:0.1.2
    commands:
      - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
      - make push-platform-ref
    environment:
      - ASTRONOMER_VERSION=0.0.0
      - ASTRONOMER_REF=${DRONE_BRANCH}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ docker_username, docker_password ]
    when:
      event: push
      branch: [ master, release-* ]

  push-airflow:
    group: push
    image: astronomerio/ap-build:0.1.2
    commands:
      - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
      - make push-airflow-ref
    environment:
      - ASTRONOMER_VERSION=0.0.0
      - ASTRONOMER_REF=${DRONE_BRANCH}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ docker_username, docker_password ]
    when:
      event: push
      branch: [ master, release-* ]

  scan-platform:
    group: push
    image: astronomerio/ap-build:0.1.2
    commands:
      - make scan-platform
    environment:
      - ASTRONOMER_VERSION=0.0.0
      - ASTRONOMER_REF=${DRONE_BRANCH}
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push
      branch: [ master, release-* ]

  # trigger:
  #   image: plugins/downstream
  #   server: http://drone.astronomer.io
  #   fork: true
  #   secrets: [ downstream_token ]
  #   repositories:
  #     - astronomerio/helm.astronomer.io
  #   when:
  #     branch: master

  ##################################
  ## Deployment
  ###################################

  # Cut releases of upstream platform components
  release-platform-components:
    image: astronomerio/ap-build:0.1.2
    secrets: [ github_api_key ]
    commands:
      # Release platform components
      - release commander $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true
      - release db-bootstrapper $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true
      - release default-backend $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true
      - release houston-api $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true
      - release orbit-ui $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true

      # Also cut the astro-cli release, which will trigger goreleaser to push release
      - release astro-cli $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH} true
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: development

  release-platform-components:
    image: astronomerio/ap-build:0.1.2
    secrets: [ github_api_key ]
    commands:
      # Release platform components
      - release commander $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
      - release db-bootstrapper $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
      - release default-backend $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
      - release houston-api $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
      - release orbit-ui $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}

      # Also cut the astro-cli release, which will trigger goreleaser to push release
      - release astro-cli $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: production


  # Update VERSIONs in Dockerfiles to point at newly created git tags
  # Update platform Dockerfiles to point to extend ap-base image
  # Update airflow onbuild images to extend the corresponding base image
  # XXX: Update all tags. These get commited back to git so they need
  # to be updated before cutting the release, even though the images are built
  # in the next pipeline (tag).
  update-tags:
    image: astronomerio/ap-build:0.1.2
    commands:
      - make update-platform-git-tags
      - make update-platform-docker-tags
      - make update-airflow-onbuild-docker-tags
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  commit-push:
    image: astronomerio/ap-build:0.1.2
    commands:
      - mkdir -p /root/.ssh
      - echo "$${GIT_PUSH_SSH_KEY}" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa
      - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
      - git remote set-url origin git@github.com:${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}.git
      - git config --global user.name "schnie"
      - git config --global user.email "greg@astronomer.io"
      - git add -A
      - git diff-index --quiet HEAD || git commit -m "Bump to $${ASTRONOMER_VERSION}"
      - git push -u origin HEAD:${DRONE_COMMIT_BRANCH}
    secrets: [ git_push_ssh_key ]
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  release:
    image: astronomerio/ap-build:0.1.2
    secrets: [ github_api_key ]
    commands:
      - release $${DRONE_REPO_NAME} $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  ##################################
  ## Tag
  ###################################
  build-platform:
    group: build
    image: astronomerio/ap-build:0.1.2
    commands:
      - make build-platform
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: tag
      branch: [ master, release-* ]

  build-airflow:
    group: build
    image: astronomerio/ap-build:0.1.2
    commands:
      - make build-airflow
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: tag
      branch: [ master, release-* ]

  push-platform:
    group: push
    image: astronomerio/ap-build:0.1.2
    commands:
      - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
      - make push-platform
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ docker_username, docker_password ]
    when:
      event: tag
      branch: [ master, release-* ]

  push-airflow:
    group: push
    image: astronomerio/ap-build:0.1.2
    commands:
      - docker login -u $${DOCKER_USERNAME} -p $${DOCKER_PASSWORD}
      - make push-airflow
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ docker_username, docker_password ]
    when:
      event: tag
      branch: [ master, release-* ]

  notify:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: platform
    when:
      status: [ failure, changed ]

# Start the Clair database
services:
  postgres:
    image: arminc/clair-db
    detach: true
    pull: true
