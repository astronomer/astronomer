# Each key here is a pod_container.

alertmanager_alertmanager:
  httpGet:
    path: /#/status
    port: 9093
  initialDelaySeconds: 30
  timeoutSeconds: 30
alertmanager_auth-proxy:
  httpGet:
    path: /healthz
    port: 8084
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
aocm_manager:
  httpGet:
    path: /readyz
    port: 8081
astro-ui_astro-ui:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10
commander_commander:
  httpGet:
    path: /healthz
    port: 8880
  initialDelaySeconds: 10
  periodSeconds: 10
elasticsearch-client_es-client:
  httpGet:
    path: /_cluster/health?local=true
    port: 9200
  initialDelaySeconds: 5
elasticsearch-exporter_metrics-exporter:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 10
elasticsearch-master_es-master:
  httpGet:
    path: /_cluster/health?local=true
    port: 9200
  initialDelaySeconds: 5
grafana_auth-proxy:
  httpGet:
    path: /healthz
    port: 8084
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
grafana_grafana:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 10
  periodSeconds: 10
houston_houston:
  failureThreshold: 10
  httpGet:
    path: /v1/healthz
    port: 8871
  initialDelaySeconds: 30
  periodSeconds: 10
kibana_auth-proxy:
  httpGet:
    path: /healthz
    port: 8084
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
nats_nats:
  httpGet:
    path: /
    port: 8222
  initialDelaySeconds: 10
  timeoutSeconds: 5
pgbouncer_pgbouncer:
  tcpSocket:
    port: 5432
postgresql-master_release-name-postgresql:
  exec:
    command:
    - sh
    - -c
    - -e
    - 'pg_isready -U "postgres" -h 127.0.0.1 -p 5432

      '
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
postgresql-slave_release-name-postgresql:
  exec:
    command:
    - sh
    - -c
    - -e
    - 'pg_isready -U "postgres" -h 127.0.0.1 -p 5432

      '
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
prometheus-blackbox-exporter_blackbox-exporter:
  httpGet:
    path: /health
    port: http
prometheus-node-exporter_node-exporter:
  httpGet:
    path: /
    port: 9100
prometheus-postgres-exporter_prometheus-postgres-exporter:
  initialDelaySeconds: 5
  periodSeconds: 10
  tcpSocket:
    port: 9187
prometheus_auth-proxy:
  httpGet:
    path: /healthz
    port: 8084
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
prometheus_prometheus:
  failureThreshold: 3
  httpGet:
    path: /-/ready
    port: 9090
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 1
registry_registry:
  httpGet:
    path: /
    port: 5000
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
stan_stan:
  httpGet:
    path: /streaming/serverz
    port: monitor
  initialDelaySeconds: 10
  timeoutSeconds: 5
